{"version":3,"file":"commons.js","mappings":"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","sources":["webpack://wcBraintree/./packages/blocks/assets/js/components/error-boundary/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/notice/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/payment-method-label/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/payment-method/index.js","webpack://wcBraintree/./packages/blocks/assets/js/components/saved-token-component/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/hooks/use-create-payment-request.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/hooks/use-create-session.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/applepay/utils.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/context/action-emitter.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/context/action-reducer.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/context/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/context/payment-context.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-form/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-form/registry.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-forms/bootstrap/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-forms/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/custom-forms/simple/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/dropin-form/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/hosted-fields/card-cvv.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/hosted-fields/card-expiration-date.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/hosted-fields/card-number.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/hosted-fields/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/credit-card/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/helpers.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/hooks/use-create-payments-client.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/hooks/use-handle-tokenization.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/googlepay/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-breakpoint-width.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-device-data.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-notice-handler.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-payment-events-handler.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-process-payment-failure.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-process-payment.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/hooks/use-three-d-secure.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/hooks/use-load-paypal.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/hooks/use-paypal-options.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/paypal/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/utils.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/venmo/hooks/index.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/venmo/hooks/use-handle-tokenization.js","webpack://wcBraintree/./packages/blocks/assets/js/payment-methods/venmo/index.js","webpack://wcBraintree/./node_modules/classnames/index.js"],"sourcesContent":["import {Component} from '@wordpress/element';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false, error: null, errorInfo: null};\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            hasError: true,\n            error,\n            errorInfo\n        })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <>\n                    {this.state.error &&\n                    <div className='wc-braintree-blocks__error'>{this.state.error.toString()}</div>}\n                    {this.state.errorInfo &&\n                    <div className='wc-braintree-blocks__error'>{this.state.errorInfo.componentStack}</div>}\n                </>\n            )\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export * from './notice';\nexport * from './payment-method';\nexport * from './payment-method-label';\nexport * from './saved-token-component';","import classNames from \"classnames\";\nimport {Notice as WordpressNotice} from '@wordpress/components';\n\nexport const Notice = ({notice, onRemove}) => {\n    const classes = classNames(`wc-braintree-blocks__notice ${notice.type}`);\n    return (\n        <WordpressNotice\n            key={`notice-${notice.type}`}\n            className={classes}\n            onRemove={() => {\n                if (notice.isDismissible) {\n                    onRemove();\n                }\n            }} {...notice}>\n            {notice.message}\n        </WordpressNotice>\n    )\n}\n\nexport default Notice;","export const PaymentMethodLabel = ({title, paymentMethod, components, icon = []}) => {\n    const {PaymentMethodLabel: Label, PaymentMethodIcons: Icons} = components;\n    if (!Array.isArray(icon)) {\n        icon = [icon];\n    }\n    return (\n        <span className={'wc-braintree-blocks-paymentMethod__label'}>\n            <Label text={title}/>\n            <Icons icons={icon} align='left'/>\n        </span>\n    )\n}\n\nexport default PaymentMethodLabel;","import {useRef, useState, useEffect} from '@wordpress/element';\nimport {PaymentMethodDataProvider} from '../../payment-methods/context';\nimport {useProcessPayment, useProcessPaymentFailure} from \"../../payment-methods/hooks\";\n\nexport const PaymentMethod = ({content, description = '', icons, ...props}) => {\n    const el = useRef();\n    const [container, setContainer] = useState(null);\n    const Content = content;\n    useEffect(() => {\n        if (el.current) {\n            setContainer(el.current);\n        }\n    }, []);\n    return (\n        <div ref={el} className={\"wc-braintree-blocks-payment-method__container\"}>\n            {description &&\n            <div className=\"wc-braintree-blocks-payment-method__description\">\n                {description}\n            </div>}\n            <PaymentMethodDataProvider container={container} {...props}>\n                <PaymentMethodProviderContainer {...props}>\n                    <Content {...props}/>\n                </PaymentMethodProviderContainer>\n            </PaymentMethodDataProvider>\n        </div>\n    )\n}\n\nconst PaymentMethodProviderContainer = (\n    {\n        children,\n        name,\n        billing,\n        shippingData,\n        eventRegistration,\n        emitResponse,\n        activePaymentMethod,\n        isExpress = false,\n        advancedFraudOptions = {}\n    }) => {\n    const {onPaymentSetup, onCheckoutFail} = eventRegistration;\n    const {responseTypes, noticeContexts} = emitResponse;\n\n    useProcessPayment({\n        onPaymentSetup,\n        responseTypes,\n        name,\n        billing,\n        shippingData,\n        activePaymentMethod,\n        advancedFraudOptions\n    });\n\n    useProcessPaymentFailure({\n        event: onCheckoutFail,\n        responseTypes,\n        messageContext: isExpress ? noticeContexts.EXPRESS_PAYMENTS : null\n    });\n    return children;\n}\n\nexport default PaymentMethod;","import {useEffect, useRef, useCallback} from '@wordpress/element';\nimport {ensureSuccessResponse, ensureErrorResponse, BraintreeError} from \"../../payment-methods/utils\";\nimport {useThreeDSecure, useProcessPaymentFailure, useDeviceData} from \"../../payment-methods/hooks\";\nimport apiFetch from '@wordpress/api-fetch';\nimport {usePaymentMethodDataContext, PaymentMethodDataProvider} from \"../../payment-methods/context\";\n\nexport const SavedTokenProvider = (props) => {\n    return (\n        <PaymentMethodDataProvider {...{...props}}>\n            <SavedTokenComponent {...{...props}}/>\n        </PaymentMethodDataProvider>\n    )\n}\nexport const SavedTokenComponent = (\n    {\n        name,\n        vaultedThreeDSecure = false,\n        token,\n        eventRegistration,\n        billing,\n        shippingData,\n        emitResponse\n    }) => {\n    const {responseTypes} = emitResponse;\n    const {onPaymentSetup, onCheckoutFail} = eventRegistration;\n    const currentData = useRef({billing, shippingData});\n    const {doPaymentDataFilter} = usePaymentMethodDataContext();\n    useDeviceData();\n    useThreeDSecure({name, vaulted: vaultedThreeDSecure});\n    useProcessPaymentFailure({\n        event: onCheckoutFail,\n        responseTypes\n    });\n\n    useEffect(() => {\n        currentData.current = {name, billing, shippingData};\n    });\n\n    const fetchTokenNonce = useCallback(async (token_id) => {\n        try {\n            let result = await apiFetch({\n                path: '/wc-braintree/v1/3ds/vaulted_nonce',\n                method: 'POST',\n                data: {token_id, version: 2}\n            });\n            return result;\n        } catch (error) {\n\n        }\n    }, []);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentSetup(async () => {\n            if (vaultedThreeDSecure) {\n                try {\n                    let result = await fetchTokenNonce(token);\n                    if (!result.success) {\n                        throw new BraintreeError({message: result.message});\n                    }\n                    result = await doPaymentDataFilter({\n                        meta: {\n                            paymentMethodData: {\n                                [`${name}_3ds_nonce_key`]: 'true'\n                            }\n                        }\n                    }, {...currentData.current, ...{result: result.data}});\n                    return ensureSuccessResponse(responseTypes, result);\n                } catch (error) {\n                    return ensureErrorResponse(responseTypes, error);\n                }\n            }\n            return null;\n        });\n        return () => unsubscribe();\n    }, [\n        onPaymentSetup,\n        vaultedThreeDSecure,\n        token,\n        name,\n        responseTypes\n    ]);\n    return null;\n}\n\nexport default SavedTokenComponent;","export * from './use-create-payment-request';\nexport * from './use-create-session';","import {useEffect, useMemo, useRef, useCallback} from '@wordpress/element';\nimport {removeNumberPrecision} from \"../../utils\";\nimport {formatLineItems, formatShippingMethods} from \"../utils\";\n\nexport const useCreatePaymentRequest = (\n    {\n        applePayInstance,\n        billing,\n        shippingData,\n        getData\n    }) => {\n    const currentData = useRef({});\n\n    useEffect(() => {\n        currentData.current.billing = billing;\n        currentData.current.shippingData = shippingData;\n    }, [billing, shippingData]);\n\n    const request = useMemo(() => {\n        if (applePayInstance) {\n            const {cartTotal, currency, cartTotalItems, billingAddress} = currentData.current.billing;\n            const {needsShipping, shippingRates} = currentData.current.shippingData;\n            const request = {\n                total: {\n                    label: getData('displayName'),\n                    type: 'final',\n                    amount: removeNumberPrecision(cartTotal.value, currency.minorUnit).toString()\n                },\n                lineItems: formatLineItems(cartTotalItems, currency.minorUnit),\n                currencyCode: currency.code,\n                countryCode: getData('countryCode'),\n                requiredBillingContactFields: ['postalAddress'],\n                requiredShippingContactFields: (() => {\n                    let fields = needsShipping ? ['postalAddress'] : [];\n                    if (!billingAddress.email) {\n                        fields = [...fields, 'email'];\n                    }\n                    if (!billingAddress.phone) {\n                        fields = [...fields, 'phone'];\n                    }\n                    return fields;\n                })()\n            }\n            if (needsShipping) {\n                request.shippingMethods = formatShippingMethods(shippingRates);\n            }\n            const paymentRequest = applePayInstance.createPaymentRequest(request);\n            return paymentRequest;\n        }\n        return null;\n    }, [applePayInstance]);\n    return request;\n}\n\nexport default useCreatePaymentRequest;","import {useEffect, useRef, useCallback} from '@wordpress/element';\nimport {__} from '@wordpress/i18n';\nimport {range} from 'lodash';\nimport {usePaymentMethodDataContext} from \"../../context\";\nimport {usePaymentEventsHandler} from \"../../hooks\";\nimport apiFetch from '@wordpress/api-fetch';\nimport {isEqual, isEmpty} from 'lodash';\nimport {\n    extractSelectedShippingOption,\n    extractAddressLines,\n    DEFAULT_BILLING_ADDRESS,\n    DEFAULT_SHIPPING_ADDRESS\n} from \"../../utils\";\n\nexport const useCreateSession = (\n    {\n        applePayInstance,\n        billing,\n        shippingData,\n        paymentRequest,\n        eventRegistration,\n        onClick,\n        onClose,\n        getData\n    }) => {\n    const {addShippingHandler} = usePaymentEventsHandler({\n        billing,\n        shippingData,\n        eventRegistration\n    });\n    const {setPaymentMethodNonce, onPaymentDataFilter, notice: {addNotice}} = usePaymentMethodDataContext();\n    const applePayData = useRef({});\n    const currentData = useRef({\n        billing,\n        shippingData,\n        onClick,\n        onClose,\n        addNotice,\n        addShippingHandler,\n        setPaymentMethodNonce,\n        onPaymentDataFilter\n    });\n\n    const getApplePayVersion = useCallback(() => {\n        // always check support from highest version first\n        for (let version of range(10, 2, -1)) {\n            if (ApplePaySession.supportsVersion(version)) {\n                return version;\n            }\n        }\n        return 3;\n    }, []);\n\n    const onSessionCancel = useCallback(() => {\n        const {onClose} = currentData.current;\n        onClose();\n    }, []);\n\n    const onValidateMerchant = useCallback((event) => {\n        const {session} = currentData.current;\n        applePayInstance.performValidation({\n            validationURL: event.validationURL,\n            displayName: getData('displayName')\n        }).then(merchantSession => {\n            session.completeMerchantValidation(merchantSession);\n        }).catch(error => {\n            session.abort();\n            addNotice(error);\n        })\n    }, [applePayInstance, addNotice]);\n\n    const onPaymentMethodSelected = useCallback((event) => {\n        // update the cart billing address info\n        const {paymentMethod} = event;\n        const {session, addNotice} = currentData.current;\n        let address = null;\n        if (paymentMethod.billingContact) {\n            address = {\n                country: paymentMethod.billingContact?.countryCode || '',\n                state: paymentMethod.billingContact?.administrativeArea || '',\n                postcode: paymentMethod.billingContact?.postalCode || '',\n                city: paymentMethod.billingContact?.locality || ''\n            }\n        }\n        apiFetch({\n            method: 'POST',\n            url: getData('routes').payment_method,\n            data: {\n                address\n            }\n        }).then(response => {\n            if (response.code) {\n                session.abort();\n                addNotice(response.messages);\n            } else {\n                session.completePaymentMethodSelection(response.data);\n            }\n        }).catch((xhr) => {\n\n        });\n    }, []);\n\n    const onShippingContactSelected = useCallback((event) => {\n        const {session} = currentData.current;\n        const {shippingContact} = event;\n        const {shippingData} = currentData.current;\n        const {shippingAddress} = shippingData;\n        const {country, state, city, postcode} = shippingAddress;\n        const newAddress = {\n            country: shippingContact?.countryCode.toUpperCase(),\n            state: shippingContact?.administrativeArea.toUpperCase(),\n            city: shippingContact.locality,\n            postcode: shippingContact.postalCode\n        }\n        //const addressEqual = isEqual({country, state, city, postcode}, newAddress);\n\n        apiFetch({\n            method: 'POST',\n            url: getData('routes').shipping_address,\n            data: {\n                payment_method: 'braintree_applepay',\n                address: newAddress\n            }\n        }).then(response => {\n            if (response.code) {\n                if (response.code === 'addressUnserviceable') {\n                    session.completeShippingContactSelection(response.data.shippingContactUpdate);\n                } else {\n                    session.completeShippingContactSelection({\n                        errors: [new ApplePayError(\n                            response.code,\n                            response.data.contactField,\n                            response.message)],\n                        newTotal: response.data.newTotal,\n                        newShippingMethods: response.data.newShippingMethods\n                    });\n                }\n            } else {\n                session.completeShippingContactSelection(response.data.shippingContactUpdate)\n            }\n        }).finally(() => {\n            shippingData.setShippingAddress({...shippingAddress, ...newAddress});\n        });\n    }, []);\n\n    const onShippingMethodSelected = useCallback((event) => {\n        const {shippingMethod} = event;\n        const {session, shippingData, addNotice} = currentData.current;\n        const {setSelectedRates, selectedRates} = shippingData;\n\n        apiFetch({\n            method: 'POST',\n            url: getData('routes').shipping_method,\n            data: {\n                payment_method: 'braintree_applepay',\n                shipping_method: shippingMethod.identifier\n            }\n        }).then(response => {\n            if (response.code) {\n                session.abort();\n                //__('There was an error updating your cart totals.', 'woo-payment-gateway')\n            } else {\n                session.completeShippingMethodSelection(response.data.shippingMethodUpdate);\n            }\n        }).finally(() => {\n            setSelectedRates(...extractSelectedShippingOption(shippingMethod.identifier));\n        });\n    }, []);\n\n    const onPaymentAuthorized = useCallback((event) => {\n        const {session, setPaymentMethodNonce, errors = []} = currentData.current;\n        if (errors?.length > 0) {\n            session.completePayment({\n                status: ApplePaySession.STATUS_FAILURE,\n                errors\n            });\n        } else {\n            applePayInstance.tokenize({\n                token: event?.payment?.token\n            }).then(response => {\n                const {shippingContact = null, billingContact = null} = event.payment;\n                applePayData.current.billingAddress = {};\n\n                if (billingContact) {\n                    applePayData.current.billingAddress = {\n                        first_name: billingContact?.givenName,\n                        last_name: billingContact?.familyName,\n                        city: billingContact?.locality,\n                        state: billingContact?.administrativeArea,\n                        postcode: billingContact?.postalCode,\n                        country: billingContact?.countryCode,\n                        ...extractAddressLines(billingContact?.addressLines || ''),\n                        ...applePayData.current.billingAddress\n                    }\n                    if (billingContact.emailAddress) {\n                        applePayData.current.billingAddress.email = billingContact.emailAddress;\n                    }\n                    if (billingContact.phoneNumber) {\n                        applePayData.current.billingAddress.phone = billingContact.phoneNumber;\n                    }\n                }\n\n                if (shippingContact) {\n                    if (currentData.current.shippingData.needsShipping) {\n                        applePayData.current.shippingAddress = {\n                            first_name: shippingContact?.givenName,\n                            last_name: shippingContact?.familyName,\n                            city: shippingContact?.locality,\n                            state: shippingContact?.administrativeArea,\n                            postcode: shippingContact?.postalCode,\n                            country: shippingContact?.countryCode,\n                            ...extractAddressLines(shippingContact?.addressLines || [])\n                        }\n                        if (applePayData.current.billingAddress.phone) {\n                            applePayData.current.shippingAddress.phone = applePayData.current.billingAddress.phone;\n                        } else if (shippingContact?.phoneNumber) {\n                            applePayData.current.shippingAddress.phone = shippingContact.phoneNumber;\n                        }\n                    }\n                    if (shippingContact?.phoneNumber && !applePayData.current.billingAddress.phone) {\n                        applePayData.current.billingAddress.phone = shippingContact?.phoneNumber;\n                    }\n                    if (shippingContact?.emailAddress && !applePayData.current.billingAddress.email) {\n                        applePayData.current.billingAddress.email = shippingContact?.emailAddress;\n                    }\n                }\n\n                setPaymentMethodNonce(response.nonce);\n                session.completePayment(ApplePaySession.STATUS_SUCCESS);\n            }).catch(error => {\n                session.completePayment(ApplePaySession.STATUS_FAILURE);\n            })\n        }\n    }, [applePayInstance]);\n\n    useEffect(() => {\n        currentData.current = {\n            ...currentData.current,\n            billing,\n            shippingData,\n            onClick,\n            onClose,\n            addNotice,\n            addShippingHandler,\n            setPaymentMethodNonce\n        };\n    });\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {billing, shippingData}) => {\n            if (!isEmpty(applePayData.current?.billingAddress)) {\n                data.meta.billingAddress = {\n                    ...DEFAULT_BILLING_ADDRESS,\n                    ...billing.billingAddress,\n                    ...applePayData.current.billingAddress\n                };\n            }\n            if (!isEmpty(applePayData.current?.shippingAddress)) {\n                data.meta.shippingAddress = {\n                    ...DEFAULT_SHIPPING_ADDRESS,\n                    ...shippingData.shippingAddress,\n                    ...applePayData.current.shippingAddress\n                };\n            }\n            return data;\n        });\n        return () => unsubscribe();\n    }, [onPaymentDataFilter]);\n\n    const createSession = useCallback(() => {\n        const {shippingData} = currentData.current;\n        const session = new ApplePaySession(getApplePayVersion(), paymentRequest);\n        session.onvalidatemerchant = onValidateMerchant;\n        session.onpaymentmethodselected = onPaymentMethodSelected;\n        session.onpaymentauthorized = onPaymentAuthorized;\n        session.oncancel = onSessionCancel;\n        if (shippingData.needsShipping) {\n            session.onshippingcontactselected = onShippingContactSelected;\n            session.onshippingmethodselected = onShippingMethodSelected;\n        }\n        currentData.current.session = session;\n        return session;\n    }, [\n        applePayInstance,\n        paymentRequest,\n        getApplePayVersion,\n        onValidateMerchant,\n        onPaymentMethodSelected,\n        onPaymentAuthorized,\n        onShippingContactSelected,\n        onShippingMethodSelected\n    ]);\n\n    const handleClick = useCallback((e) => {\n        e.preventDefault();\n        currentData.current.onClick();\n        try {\n            const session = createSession();\n            session.begin();\n        } catch (error) {\n            alert(error);\n        }\n    }, [createSession]);\n\n    return {handleClick};\n}\n\nexport default useCreateSession;","import {useState, useEffect} from '@wordpress/element';\nimport {registerExpressPaymentMethod} from '@woocommerce/blocks-registry';\nimport {create as createApplePay} from '@braintree/apple-pay';\nimport {getSettings, getClientToken, isCartPage, isCheckoutPage} from \"../utils\";\nimport {PaymentMethod} from \"../../components/payment-method\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {useCreatePaymentRequest, useCreateSession} from \"./hooks\";\nimport ErrorBoundary from \"../../components/error-boundary\";\n\nconst getData = getSettings('braintree_applepay');\n\nconst loadApplePay = new Promise((resolve, reject) => {\n    createApplePay({\n        authorization: getClientToken()\n    }).then(instance => resolve(instance)).catch(error => reject(error));\n});\n\nconst Test = (props) => {\n    return (\n        <ErrorBoundary>\n            <ApplePayContainer {...props}/>\n        </ErrorBoundary>\n    )\n}\n\nconst ApplePayContainer = (\n    {\n        getData,\n        billing,\n        shippingData,\n        eventRegistration,\n        onClick,\n        onClose\n    }) => {\n    const [applePayInstance, setApplePayInstance] = useState(null);\n    const {notice: {addNotice}} = usePaymentMethodDataContext();\n    const paymentRequest = useCreatePaymentRequest({\n        applePayInstance,\n        billing,\n        shippingData,\n        getData\n    });\n    const {handleClick} = useCreateSession({\n        applePayInstance,\n        billing,\n        shippingData,\n        paymentRequest,\n        eventRegistration,\n        onClick,\n        onClose,\n        getData\n    });\n    useEffect(() => {\n        loadApplePay.then(instance => setApplePayInstance(instance)).catch(error => addNotice(error));\n    }, []);\n\n    return (\n        <div\n            className={'wc-braintree-blocks-apple-pay-button__container'}>\n            <ApplePayButton\n                onClick={handleClick}\n                type={getData('buttonType')}\n                style={getData('buttonStyle')}\n                rounded={getData('roundedButton')}/>\n        </div>\n    )\n}\n\nconst ApplePayButton = ({onClick, type, style, rounded = false}) => {\n    const getButtonStyle = (style) => {\n        switch (style) {\n            case 'apple-pay-button-black':\n                return 'black';\n            case 'apple-pay-button-white':\n                return 'white';\n            case 'apple-pay-button-white-with-line':\n                return 'white-outline';\n        }\n    }\n    const styles = {\n        'ApplePayButtonType': type,\n        'ApplePayButtonStyle': getButtonStyle(style)\n    }\n    return <button\n        className={`wc-braintree-blocks-apple-pay__button ${style} ${rounded ? 'apple-pay-button-rounded' : ''}`}\n        style={styles}\n        onClick={onClick}/>\n\n}\nif ((isCartPage() && getData('expressCartEnabled')) || (isCheckoutPage() && getData('expressCheckoutEnabled'))) {\n    registerExpressPaymentMethod({\n        name: getData('name'),\n        canMakePayment: async () => {\n            return window.ApplePaySession && ApplePaySession.canMakePayments();\n        },\n        content: <PaymentMethod content={Test}\n                                title={getData('title')}\n                                description={getData('description')}\n                                name={getData('name')}\n                                icon={getData('icon')}\n                                getData={getData}\n                                isExpress={true}/>,\n        edit: <PaymentMethod content={ApplePayContainer} getData={getData}/>,\n        supports: {\n            features: getData('features')\n        }\n    });\n}","import {getShippingOptionId, removeNumberPrecision} from \"../utils\";\n\nexport const formatLineItems = (lineItems, minorUnit) => {\n    let items = [];\n    const keys = ['total_tax', 'total_shipping'];\n    lineItems.forEach(item => {\n        if (0 < item.value || (item.key && keys.includes(item.key))) {\n            items.push({\n                label: item.label,\n                type: 'final',\n                amount: removeNumberPrecision(item.value, minorUnit).toString()\n            });\n        }\n    })\n    return items;\n}\n\nexport const formatShippingMethods = (shippingRates) => {\n    let options = [];\n    shippingRates.forEach((shippingPackage, idx) => {\n        let rates = shippingPackage.shipping_rates.map(rate => {\n            let txt = document.createElement('textarea');\n            txt.innerHTML = rate.name;\n            return {\n                identifier: getShippingOptionId(idx, rate.rate_id),\n                label: txt.value,\n                detail: '',\n                amount: removeNumberPrecision(rate.price, rate.currency_minor_unit)\n            }\n        });\n        options = [...options, ...rates];\n    });\n    return options;\n}","import {useMemo} from '@wordpress/element';\nimport {uniqueId} from 'lodash';\nimport {ACTIONS} from './action-reducer';\n\nexport const useActionEmitter = (dispatch) => {\n    const data = useMemo(() => ({\n        onPaymentDataFilter: (callback, priority = 10) => {\n            const action = {\n                action: ACTIONS.ADD_ACTION,\n                type: 'payment_data_filter',\n                id: uniqueId(),\n                callback,\n                priority\n            };\n            dispatch(action);\n            return () => dispatch({action: ACTIONS.REMOVE_ACTION, type: action.type, id: action.id})\n        }\n    }), [dispatch]);\n    return data;\n}\n\nexport const emittFilter = async (data, args, {handlers, type}) => {\n    const events = handlers[type];\n    const sortedEvents = Array.from(events.values()).sort((a, b) => a.priority - b.priority);\n    try {\n        for (const event of sortedEvents) {\n            data = await Promise.resolve(event.callback(data, args));\n        }\n    } catch (error) {\n        console.log(error);\n        throw error;\n    }\n    return data;\n}\n\n","export const ACTIONS = {\n    ADD_ACTION: 'add_action',\n    REMOVE_ACTION: 'remove_action'\n}\n\nexport const actionReducer = (state = {}, {action, type, id, callback, priority = 10}) => {\n    const event = state[type] ? state[type] : new Map();\n    switch (action) {\n        case ACTIONS.ADD_ACTION:\n            event.set(id, {callback, priority});\n            return {...state, [type]: event};\n        case ACTIONS.REMOVE_ACTION:\n            event.delete(id);\n            return {...state, [type]: event};\n    }\n    return state;\n}","export * from './payment-context';\nexport * from './action-reducer';\nexport * from './action-emitter';","import {useState, useRef, useEffect, useCallback, createContext, useContext, useReducer} from '@wordpress/element';\nimport {actionReducer, useActionEmitter, emittFilter} from \"../context\";\nimport {loadClient} from \"../utils\";\nimport {useNoticeHandler, useProcessPayment, useProcessPaymentFailure} from \"../hooks\";\n\nconst PaymentMethodDataContext = createContext();\nexport const PaymentMethodDataProvider = (\n    {\n        children,\n        container,\n        onSubmit,\n        getData,\n        isExpress = null,\n        setExpressPaymentError\n    }) => {\n    const [client, setClient] = useState();\n    const [paymentMethodNonce, setPaymentMethodNonce] = useState(null);\n    const [eventHandlers, dispatch] = useReducer(actionReducer, {});\n    const {onPaymentDataFilter} = useActionEmitter(dispatch);\n    const currentEventHandlers = useRef(eventHandlers);\n    const currentData = useRef({onSubmit});\n    const paymentHandler = useRef(null);\n    const [notice, addNotice, removeNotice] = useNoticeHandler({isExpress, setExpressPaymentError});\n\n    const doPaymentDataFilter = useCallback(async (data, args) => {\n        return await emittFilter(data, args, {\n            handlers: currentEventHandlers.current,\n            type: 'payment_data_filter'\n        });\n    }, []);\n\n    const setPaymentHandler = useCallback((handler) => {\n        paymentHandler.current = handler;\n    }, []);\n    useEffect(() => {\n        currentEventHandlers.current = eventHandlers;\n    }, [eventHandlers]);\n\n    useEffect(() => {\n        loadClient.then(client => setClient(client)).catch(error => {\n            addNotice(error)\n        });\n    }, [addNotice]);\n\n    useEffect(() => {\n        currentData.current = {onSubmit};\n    }, [onSubmit]);\n\n    useEffect(() => {\n        if (paymentMethodNonce) {\n            currentData.current.onSubmit();\n        }\n    }, [paymentMethodNonce]);\n\n    const paymentMethodDataContext = {\n        container,\n        client,\n        paymentMethodNonce,\n        setPaymentMethodNonce,\n        onPaymentDataFilter,\n        doPaymentDataFilter,\n        setPaymentHandler,\n        onSubmit,\n        paymentHandler: paymentHandler.current,\n        notice: {\n            notice,\n            addNotice,\n            removeNotice\n        },\n        fraud: {\n            enabled: getData('advancedFraudEnabled')\n        },\n        threeDSecureEnabled: getData('threeDSecureEnabled')\n    };\n    return (\n        <PaymentMethodDataContext.Provider value={paymentMethodDataContext}>\n            {children}\n        </PaymentMethodDataContext.Provider>\n    )\n}\n\nexport const usePaymentMethodDataContext = () => {\n    return useContext(PaymentMethodDataContext);\n}","import {useState, useEffect, useCallback, useRef, cloneElement} from '@wordpress/element';\nimport {__, sprintf} from '@wordpress/i18n';\nimport {create} from '@braintree/hosted-fields';\nimport classnames from \"classnames\";\nimport {getCustomFormConfig} from \"./registry\";\nimport {useBreakpointWidth} from \"../../hooks\";\nimport '../custom-forms';\n\nexport const CustomForm = ({options, client, id, setPaymentHandler}) => {\n    const config = getCustomFormConfig(id);\n    const {breakpoint = 0, fields: fieldKeys = [], content: Content = null, className = ''} = config;\n    const [hostedFieldInstance, setHostedFieldsInstance] = useState(false);\n    const [fields, setFields] = useState({});\n    const [containerElement, setContainerElement] = useState();\n    const [cardBrand, setCardBrand] = useState(null);\n    const fieldOrder = useRef([]);\n    const setFieldOrder = (id) => {\n        if (!fieldOrder.current.includes(id)) {\n            fieldOrder.current.push(id);\n        }\n    }\n    const getIconSrc = (type) => {\n        for (let icon of options.icons) {\n            if (icon.type === type) {\n                return icon.src;\n            }\n        }\n        return null;\n    };\n    const assertFieldsValid = useCallback(fields => {\n        const missingFields = fieldKeys.reduce((acc, prop) => {\n            if (!fields.hasOwnProperty(prop)) {\n                acc.push(prop);\n            }\n            return acc;\n        }, []);\n        return missingFields.length == 0;\n    }, []);\n    const setFieldContainer = useCallback((id) => (container) => {\n        if (!fields?.[id]?.container && container !== null) {\n            const field = {\n                container,\n                ...options.fields[id]\n            }\n            setFields({...fields, [id]: field});\n        }\n    }, [fields, setFields]);\n\n    const addClassToFields = useCallback((keys, className) => {\n        keys.forEach(key => {\n            fields?.[key]?.container.classList.add(className);\n        });\n    }, [fields]);\n\n    const paymentHandler = useCallback(({shippingData, billing}) => new Promise((resolve, reject) => {\n        const options = {billingAddress: {}};\n        if (billing?.billingAddress?.address_1) {\n            options.billingAddress.streetAddress = billing.billingAddress.address_1;\n        }\n        if (billing?.billingAddress?.postcode) {\n            options.billingAddress.postalCode = billing.billingAddress.postcode;\n        }\n        hostedFieldInstance.tokenize(options, (error, payload) => {\n            if (error) {\n                if (error.code === 'HOSTED_FIELDS_FIELDS_INVALID') {\n                    addClassToFields(error?.details?.invalidFieldKeys || [], 'braintree-hosted-fields-invalid');\n                } else if (error.code === 'HOSTED_FIELDS_FIELDS_EMPTY') {\n                    addClassToFields(fieldKeys, 'braintree-hosted-fields-invalid');\n                }\n                reject(error);\n            } else {\n                resolve(payload);\n            }\n        });\n    }), [hostedFieldInstance]);\n\n    useEffect(() => {\n        setPaymentHandler(paymentHandler);\n    }, [paymentHandler]);\n\n    useBreakpointWidth({key: id, el: containerElement, className, breakpoint});\n\n    useEffect(() => {\n        if (assertFieldsValid(fields)) {\n            client.then(clientInstance => {\n                create({\n                    client: clientInstance,\n                    fields,\n                    styles: options.styles\n                }).then(instance => setHostedFieldsInstance(instance)).catch(error => {\n\n                });\n            });\n        }\n    }, [fields]);\n\n    useEffect(() => {\n        if (hostedFieldInstance) {\n            hostedFieldInstance.on('cardTypeChange', (event) => {\n                if (event?.cards?.length == 1) {\n                    setCardBrand(event.cards[0].type);\n                } else {\n                    setCardBrand(null);\n                }\n            });\n            hostedFieldInstance.on('validityChange', (event) => {\n                const field = event.fields[event.emittedBy];\n                if (field.isValid) {\n                    const idx = fieldOrder.current.indexOf(event.emittedBy);\n                    if (fieldOrder.current?.[idx + 1]) {\n                        const nextField = fieldOrder.current[idx + 1];\n                        hostedFieldInstance.focus(nextField);\n                    }\n                }\n            });\n        }\n    }, [hostedFieldInstance]);\n    if (!Content) {\n        return <InvalidCustomForm id={id}/>;\n    }\n    return (\n        <div ref={setContainerElement} className='wc-braintree-blocks-custom__form'>\n            {cloneElement(Content, {\n                setFieldContainer,\n                setFieldOrder,\n                CardIcon: <CardIcon type={cardBrand} src={getIconSrc(cardBrand)}/>\n            })}\n        </div>\n    );\n}\n\nconst InvalidCustomForm = ({id}) => {\n    return (\n        <div className={'wc-braintree-blocks-notice__info'}>\n            {sprintf(__('%s is not a supported custom form.', 'woo-payment-gateway'), id)}\n        </div>\n    );\n};\n\nconst CardIcon = ({type, src}) => {\n    if (!type) {\n        return null;\n    }\n    const classes = classnames('wc-braintree-blocks-current-card__icon', type);\n    return (\n        <img className={classes} src={src}/>\n    )\n}\n\nexport default CustomForm;","const forms = {};\n\nexport const registerCustomForm = (config) => {\n    assertValidConfig(config);\n    forms[config.id] = config;\n}\n\nexport const getCustomFormConfig = (id) => {\n    if (assertValidFormId(id)) {\n        return forms[id];\n    }\n    return {};\n}\n\nconst assertValidFormId = (id) => {\n    return forms.hasOwnProperty(id);\n}\n\nconst assertValidConfig = (config) => {\n    if (!config.id) {\n        throw new Error('Custom forms must have a unique ID.');\n    }\n    assertConfigHasProperties(config, ['content', 'breakpoint']);\n}\n\nconst assertConfigHasProperties = (config, props = []) => {\n    const missingParams = props.reduce((acc, prop) => {\n        if (!config.hasOwnProperty(prop)) {\n            acc.push(prop);\n        }\n        return acc;\n    }, []);\n    if (missingParams.length > 0) {\n        throw new TypeError(`Custom form config missing params ${missingParams.join(', ')}`);\n    }\n}","import {__} from '@wordpress/i18n';\nimport {CardNumber, CardExpirationDate, CardCVV} from \"../../hosted-fields\";\nimport './style.scss';\n\nexport const BootstrapForm = (props) => {\n    return (\n        <div className='wc-braintree-blocks-bootstrap__form'>\n            <div className='row'>\n                <div className='col-md-6'>\n                    <div className={'form-group cardnumber-form-group'}>\n                        <label>{__('Card Number', 'woo-payment-gateway')}</label>\n                        <CardNumber className={'bootstrap-input'} {...props}/>\n                    </div>\n                </div>\n                <div className='col-md-3'>\n                    <div className={'form-group'}>\n                        <label>{__('Exp Date', 'woo-payment-gateway')}</label>\n                        <CardExpirationDate className={'bootstrap-input'} {...props}/>\n                    </div>\n                </div>\n                <div className='col-md-3'>\n                    <div className={'form-group'}>\n                        <label>{__('CVV', 'woo-payment-gateway')}</label>\n                        <CardCVV className={'bootstrap-input'} {...props}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BootstrapForm;","import {registerCustomForm} from \"../custom-form/registry\";\nimport BootstrapForm from './bootstrap';\nimport SimpleForm from './simple';\n\nregisterCustomForm({\n    id: 'bootstrap_form',\n    content: <BootstrapForm/>,\n    breakpoint: 425,\n    fields: ['number', 'expirationDate', 'cvv'],\n    className: 'bootstrap-md'\n});\nregisterCustomForm({\n    id: 'simple_form',\n    content: <SimpleForm/>,\n    breakpoint: 425,\n    fields: ['number', 'expirationDate', 'cvv'],\n    className: 'simple-form-md'\n})","import {__} from '@wordpress/i18n';\nimport {CardNumber, CardExpirationDate, CardCVV} from \"../../hosted-fields\";\nimport './style.scss';\n\nexport const SimpleForm = (props) => {\n    return (\n        <div className='wc-braintree-blocks-simple__form'>\n            <div className='form-group'>\n                <label>{__('Card Number', 'woo-payment-gateway')}</label>\n                <CardNumber className='hosted-field braintree-card-number' {...props}/>\n            </div>\n            <div className='form-group'>\n                <label>{__('Exp Date', 'woo-payment-gateway')}</label>\n                <CardExpirationDate className='hosted-field' {...props}/>\n            </div>\n            <div className='form-group'>\n                <label>{__('CVV', 'woo-payment-gateway')}</label>\n                <CardCVV className='hosted-field' {...props}/>\n            </div>\n        </div>\n    )\n}\n\nexport default SimpleForm;","import {create as createDropin} from '@braintree/dropin';\nimport {useEffect, useState, useRef} from '@wordpress/element';\n\nexport const DropinForm = ({options, setDropinInstance}) => {\n    const {clientToken, locale = 'en_US'} = options;\n    const [error, setError] = useState(null);\n    const el = useRef(null);\n    useEffect(() => {\n        createDropin({\n            authorization: clientToken,\n            container: '.wc-braintree-blocks-dropin__form',\n            locale: locale\n        }, (error, dropinInstance) => {\n            if (error) {\n                setError(error?.message);\n            } else {\n                setDropinInstance(dropinInstance);\n            }\n        })\n    }, []);\n    return (\n        <>\n            {error && <div className={'wc-braintree-blocks__error'}>{error}</div>}\n            <div ref={el} className={'wc-braintree-blocks-dropin__form'}>\n\n            </div>\n        </>\n    )\n\n}\n\nexport default DropinForm;","import classnames from \"classnames\";\n\nexport const CardCVV = ({setFieldContainer, setFieldOrder, className}) => {\n    setFieldOrder('cvv');\n    const classes = classnames('braintree-web-hosted-field', className);\n    return <div ref={setFieldContainer('cvv')} id='braintree-cvv' className={classes}></div>\n}\n\nexport default CardCVV;","import classnames from \"classnames\";\n\nexport const CardExpirationDate = ({setFieldContainer, setFieldOrder, className}) => {\n    setFieldOrder('expirationDate');\n    const classes = classnames('braintree-web-hosted-field', className);\n    return (\n        <div ref={setFieldContainer('expirationDate')} id='braintree-exp-date'\n             className={classes}></div>\n    )\n}\n\nexport default CardExpirationDate;","import {useEffect, useRef} from \"@wordpress/element\";\nimport classnames from \"classnames\";\n\nexport const CardNumber = ({onChange, setFieldContainer, setFieldOrder, className, CardIcon}) => {\n    setFieldOrder('number');\n    const classes = classnames('braintree-web-hosted-field', className);\n    return (\n        <div ref={setFieldContainer('number')} id='braintree-number' className={classes}>\n            {CardIcon}\n        </div>\n    )\n}\n\nexport default CardNumber;","export * from './card-number';\nexport * from './card-expiration-date';\nexport * from './card-cvv';","import {useState, useEffect, useCallback} from '@wordpress/element';\nimport {registerPaymentMethod} from '@woocommerce/blocks-registry';\nimport classnames from 'classnames';\nimport {__} from '@wordpress/i18n';\nimport {getSettings, loadClient, getClientToken, canShowSavedCard} from \"../utils\";\nimport {PaymentMethod, PaymentMethodLabel, SavedTokenProvider, Notice} from '../../components';\nimport DropinForm from \"./dropin-form\";\nimport CustomForm from \"./custom-form\";\nimport {usePaymentMethodDataContext} from \"../context\";\n\nconst getData = getSettings('braintree_cc');\n\nconst CreditCardComponent = (props) => {\n    const {setPaymentHandler, notice} = usePaymentMethodDataContext();\n    const dropinEnabled = getData('dropinEnabled');\n    const Content = dropinEnabled ? DropinContainer : HostedFieldsContainer;\n    const classes = classnames('wc-braintree-card-container', {\n        'dropin': dropinEnabled,\n        'customForm': !dropinEnabled\n    })\n\n    return (\n        <>\n            {notice?.notice && <Notice notice={notice.notice} onRemove={notice.removeNotice}/>}\n            <div className={classes}>\n                <Content setPaymentHandler={setPaymentHandler}/>\n            </div>\n        </>\n    )\n}\n\nconst HostedFieldsContainer = (props) => {\n    const options = {\n        fields: getData('hostedFieldsOptions'),\n        styles: getData('hostedFieldsStyles'),\n        icons: getData('icons')\n    };\n    return <CustomForm options={options} client={loadClient} id={getData('customForm')} {...props}/>\n}\n\nconst DropinContainer = ({setPaymentHandler}) => {\n    const [dropinInstance, setDropinInstance] = useState(null);\n    const handlePaymentProcessing = useCallback(() => {\n        return new Promise((resolve, reject) => {\n            dropinInstance.requestPaymentMethod((err, payload) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(payload);\n                }\n            });\n        })\n    }, [dropinInstance]);\n    useEffect(() => {\n        setPaymentHandler(handlePaymentProcessing);\n    }, [handlePaymentProcessing]);\n\n    const options = {\n        clientToken: getClientToken(),\n        locale: 'en_US'\n    }\n    return (\n        <DropinForm options={options} setDropinInstance={setDropinInstance}/>\n    )\n}\n\nregisterPaymentMethod({\n    name: getData('name'),\n    label: <PaymentMethodLabel\n        title={getData('title')}\n        paymentMethod={getData('name')}\n        icon={getData('icon')}/>,\n    ariaLabel: __('Credit Cards', 'woo-payment-gateway'),\n    canMakePayment: () => true,\n    content: <PaymentMethod content={CreditCardComponent}\n                            title={getData('title')}\n                            description={getData('description')}\n                            name={getData('name')}\n                            icon={getData('icon')}\n                            getData={getData}/>,\n    savedTokenComponent: <SavedTokenProvider getData={getData}\n                                             name={getData('name')}\n                                             vaultedThreeDSecure={getData('vaultedThreeDSecure')}/>,\n    edit: <PaymentMethod content={CreditCardComponent} getData={getData}/>,\n    supports: {\n        showSavedCards: getData('features').includes('tokenization'),\n        showSaveOption: canShowSavedCard(),\n        features: getData('features')\n    }\n});","import {removeNumberPrecision, formatPrice, getShippingOptionId} from \"../utils\";\n\n\nexport const getDisplayItems = (cartTotalItems, unit = 2) => {\n    let items = [];\n    const keys = ['total_tax', 'total_shipping'];\n    cartTotalItems.forEach(item => {\n        if (0 < item.value || (item.key && keys.includes(item.key))) {\n            items.push({\n                label: item.label,\n                type: 'LINE_ITEM',\n                price: removeNumberPrecision(item.value, unit).toString()\n            });\n        }\n    })\n    return items;\n}\n\nexport const getShippingOptions = (shippingRates) => {\n    let options = [];\n    shippingRates.forEach((shippingPackage, idx) => {\n        let rates = shippingPackage.shipping_rates.map(rate => {\n            let txt = document.createElement('textarea');\n            txt.innerHTML = rate.name;\n            let price = formatPrice(rate.price, rate.currency_code);\n            return {\n                id: getShippingOptionId(idx, rate.rate_id),\n                label: txt.value,\n                description: `${price}`\n            }\n        });\n        options = [...options, ...rates];\n    });\n    return options;\n}\n\nexport const getSelectedShippingOptionId = (shippingRates) => {\n    let defaultSelectedOptionId = '';\n    shippingRates.forEach((shippingPackage, idx) => {\n        shippingPackage.shipping_rates.forEach(rate => {\n            if (rate.selected) {\n                defaultSelectedOptionId = getShippingOptionId(idx, rate.rate_id);\n            }\n        });\n    });\n    return defaultSelectedOptionId;\n}","export * from './use-create-payments-client';\nexport * from './use-handle-tokenization';","import {useState, useEffect, useRef} from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport google from '@googlepay';\nimport {usePaymentEventsHandler} from \"../../hooks\";\nimport {extractSelectedShippingOption} from \"../../utils\";\n\nexport const useCreatePaymentsClient = ({getData, shippingData, billing, eventRegistration}) => {\n    const {needsShipping} = shippingData;\n    const [paymentsClient, setPaymentsClient] = useState(null);\n    const {addShippingHandler} = usePaymentEventsHandler({billing, shippingData, eventRegistration});\n    const currentData = useRef({billing, shippingData});\n    useEffect(() => {\n        currentData.current = {billing, shippingData};\n    }, [billing, shippingData]);\n    useEffect(() => {\n        const args = {\n            environment: getData('googleEnvironment'),\n            merchantInfo: {\n                merchantName: getData('merchantName'),\n                merchantId: getData('googleMerchantId')\n            },\n            paymentDataCallbacks: {\n                onPaymentAuthorized: () => Promise.resolve({\n                    transactionState: \"SUCCESS\"\n                })\n            }\n        }\n        if (needsShipping) {\n            args.paymentDataCallbacks.onPaymentDataChanged = (data) => {\n                return new Promise((resolve, reject) => {\n                    const {shippingAddress, shippingOptionData} = data;\n                    const {shippingData} = currentData.current;\n                    let shippingOptionId = shippingOptionData?.id;\n                    const newAddress = {\n                        city: shippingAddress?.locality || '',\n                        state: shippingAddress?.administrativeArea || '',\n                        postcode: shippingAddress?.postalCode || '',\n                        country: shippingAddress?.countryCode || ''\n                    };\n\n                    apiFetch({\n                        method: 'POST',\n                        url: getData('routes').shipping,\n                        data: {\n                            payment_method: 'braintree_googlepay',\n                            address: newAddress,\n                            shipping_method: shippingOptionId\n                        }\n                    }).then(response => {\n                        if (response.code) {\n                            shippingOptionId = null;\n                            resolve(response.data.braintree_googlepay);\n                        } else {\n                            resolve(response.data.braintree_googlepay.requestUpdate);\n                        }\n                    }).catch(response => {\n                        resolve(response.data.braintree_googlepay);\n                    }).finally(() => {\n                        shippingData.setShippingAddress({...shippingData.shippingAddress, ...newAddress});\n                        if (shippingOptionId && shippingOptionId !== 'shipping_option_unselected') {\n                            shippingData.setSelectedRates(...extractSelectedShippingOption(shippingOptionId));\n                        }\n                    });\n                });\n            }\n        }\n        setPaymentsClient(new google.payments.api.PaymentsClient(args));\n    }, [\n        needsShipping,\n        addShippingHandler\n    ]);\n    return paymentsClient;\n}","import {useRef, useCallback, useEffect} from '@wordpress/element';\nimport {getDisplayItems, getShippingOptions, getSelectedShippingOptionId} from \"../helpers\";\nimport {\n    removeNumberPrecision,\n    extractFullName,\n    DEFAULT_BILLING_ADDRESS,\n    DEFAULT_SHIPPING_ADDRESS\n} from \"../../utils\";\nimport {usePaymentMethodDataContext} from \"../../context\";\n\nexport const useHandleTokenization = (\n    {\n        getData,\n        onClick,\n        onClose,\n        googlePayInstance,\n        paymentsClient,\n        billing,\n        shippingData\n    }) => {\n    const currentData = useRef({billing, shippingData});\n    const payloadData = useRef({});\n    const {setPaymentMethodNonce, onPaymentDataFilter} = usePaymentMethodDataContext();\n    useEffect(() => {\n        currentData.current = {billing, shippingData, onClick, onClose};\n    }, [\n        onClick,\n        onClose,\n        shippingData,\n        billing\n    ]);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {billing, shippingData}) => {\n            if (payloadData.current?.billingAddress) {\n                data.meta.billingAddress = {\n                    ...DEFAULT_BILLING_ADDRESS,\n                    ...payloadData.current.billingAddress,\n                    email: billing.billingAddress.email\n                };\n                if (payloadData.current.email) {\n                    data.meta.billingAddress.email = payloadData.current.email;\n                }\n            }\n            if (payloadData.current?.shippingAddress) {\n                data.meta.shippingAddress = {\n                    ...DEFAULT_SHIPPING_ADDRESS,\n                    ...shippingData.shippingAddress,\n                    ...payloadData.current.shippingAddress\n                }\n            }\n            return data;\n        });\n        return () => unsubscribe();\n    }, [onPaymentDataFilter]);\n\n    const handleClick = useCallback(() => {\n        const {billing, shippingData} = currentData.current;\n        const {billingAddress, currency, cartTotal, cartTotalItems} = billing;\n        const {needsShipping, shippingRates} = shippingData;\n        currentData.current.onClick();\n        const paymentDataRequestArgs = {\n            merchantInfo: {\n                merchantName: getData('googleMerchantName'),\n                merchantId: getData('googleMerchantId')\n            },\n            transactionInfo: {\n                countryCode: getData('countryCode'),\n                currencyCode: currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: removeNumberPrecision(cartTotal.value, currency.minorUnit).toString(),\n                totalPriceLabel: getData('totalPriceLabel'),\n                displayItems: getDisplayItems(cartTotalItems, currency.minorUnit)\n            },\n            emailRequired: !billingAddress.email,\n            callbackIntents: ['PAYMENT_AUTHORIZATION'],\n            shippingAddressRequired: needsShipping\n        };\n        if (needsShipping) {\n            paymentDataRequestArgs.shippingAddressParameters = {};\n            paymentDataRequestArgs.shippingOptionRequired = true;\n            paymentDataRequestArgs.callbackIntents = [...paymentDataRequestArgs.callbackIntents, 'SHIPPING_ADDRESS', 'SHIPPING_OPTION'];\n            const shippingOptions = getShippingOptions(shippingRates);\n            if (shippingOptions.length) {\n                paymentDataRequestArgs.shippingOptionParameters = {\n                    shippingOptions,\n                    defaultSelectedOptionId: getSelectedShippingOptionId(shippingRates)\n                }\n            }\n        }\n        const paymentDataRequest = googlePayInstance.createPaymentDataRequest(paymentDataRequestArgs);\n        paymentDataRequest.allowedPaymentMethods[0].parameters.assuranceDetailsRequired = true;\n        paymentDataRequest.allowedPaymentMethods[0].parameters.billingAddressRequired = true;\n        paymentDataRequest.allowedPaymentMethods[0].parameters.billingAddressParameters = {\n            format: 'FULL',\n            phoneNumberRequired: true\n        }\n        paymentsClient.loadPaymentData(paymentDataRequest).then(async (payload) => {\n            // parse the payload\n            if (payload?.paymentMethodData?.info?.billingAddress) {\n                const address = payload.paymentMethodData.info.billingAddress;\n                const [first_name, last_name] = extractFullName(address.name);\n                payloadData.current.billingAddress = {\n                    first_name,\n                    last_name,\n                    address_1: address.address1,\n                    address_2: address.address2,\n                    city: address.locality,\n                    state: address.administrativeArea,\n                    postcode: address.postalCode,\n                    country: address.countryCode,\n                    phone: billingAddress.phone\n                }\n                if (address.phoneNumber && !billingAddress.phone) {\n                    payloadData.current.billingAddress.phone = address.phoneNumber;\n                }\n            }\n            if (payload.shippingAddress) {\n                const address = payload.shippingAddress;\n                const [first_name, last_name] = extractFullName(address.name);\n                payloadData.current.shippingAddress = {\n                    first_name,\n                    last_name,\n                    address_1: address.address1,\n                    address_2: address.address2,\n                    city: address.locality,\n                    state: address.administrativeArea,\n                    postcode: address.postalCode,\n                    country: address.countryCode\n                };\n                if (payloadData.current?.billingAddress?.phone) {\n                    payloadData.current.shippingAddress.phone = payloadData.current.billingAddress.phone;\n                }\n            }\n            if (payload.email) {\n                payloadData.current.email = payload.email;\n            }\n            const data = await googlePayInstance.parseResponse(payload);\n            // set payment method\n            payloadData.current.paymentMethodNonce = data.nonce;\n            setPaymentMethodNonce(data.nonce);\n        }).catch(error => {\n            if (error?.statusCode === 'CANCELED') {\n                currentData.current.onClose();\n                return;\n            }\n            console.log(error);\n        });\n    }, [\n        paymentsClient,\n        googlePayInstance,\n        setPaymentMethodNonce\n    ]);\n    return handleClick;\n}\n\nexport default useHandleTokenization;","import {useState, useEffect, useRef, useCallback} from '@wordpress/element';\nimport {create as createGooglePay} from '@braintree/google-payment';\nimport {registerExpressPaymentMethod} from '@woocommerce/blocks-registry';\nimport {PaymentMethod} from \"../../components\";\nimport {getSettings, getClientToken, isCartPage, isCheckoutPage} from \"../utils\";\nimport google from '@googlepay';\nimport {useCreatePaymentsClient, useHandleTokenization} from \"./hooks\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {useExpressBreakpointWidth} from \"../hooks\";\n\nconst getData = getSettings('braintree_googlepay');\nlet canPay = null;\nconst paymentsClient = new google.payments.api.PaymentsClient({\n    environment: getData('googleEnvironment'),\n    merchantInfo: {\n        merchantName: getData('googleMerchantName'),\n        merchantId: getData('googleMerchantId')\n    }\n});\nconst GooglePayContainer = ({getData, billing, shippingData, eventRegistration, onClick, onClose}) => {\n    const el = useRef(null);\n    const [googlePayInstance, setGooglePayInstance] = useState(null);\n    useExpressBreakpointWidth({breakpoint: 375});\n    const {notice} = usePaymentMethodDataContext();\n    const paymentsClient = useCreatePaymentsClient({getData, billing, shippingData, eventRegistration});\n    const handleClick = useHandleTokenization({\n        getData,\n        onClick,\n        onClose,\n        googlePayInstance,\n        paymentsClient,\n        billing,\n        shippingData\n    });\n\n    const removeButton = useCallback((el) => {\n        while (el.lastChild) {\n            el.removeChild(el.lastChild);\n        }\n    }, []);\n\n    useEffect(() => {\n        createGooglePay({\n            authorization: getClientToken(),\n            googlePayVersion: 2,\n            googleMerchantId: getData('googleMerchantId')\n        }).then(instance => {\n            setGooglePayInstance(instance);\n        }).catch(error => notice.addNotice(error));\n    }, []);\n    useEffect(() => {\n        if (el.current && paymentsClient) {\n            removeButton(el.current);\n            const button = paymentsClient.createButton({\n                ...getData('buttonOptions'), ...{\n                    onClick: handleClick\n                }\n            });\n            if (getData('buttonShape') === 'rect') {\n                button.querySelector('button')?.classList?.remove('new_style');\n            } else {\n                button.querySelector('button')?.classList?.add('gpay-button-round');\n            }\n            el.current.append(button);\n        }\n    }, [\n        paymentsClient,\n        removeButton,\n        handleClick\n    ]);\n    return (\n        <div ref={el} className={'wc-braintree-blocks-gpay-button'}>\n\n        </div>\n    );\n}\nif ((isCartPage() && getData('expressCartEnabled')) || (isCheckoutPage() && getData('expressCheckoutEnabled'))) {\n    registerExpressPaymentMethod({\n        name: getData('name'),\n        canMakePayment: async () => {\n            if (canPay !== null) {\n                return canPay;\n            }\n            try {\n                const googlePayInstance = await createGooglePay({\n                    authorization: getClientToken(),\n                    googlePayVersion: 2,\n                    googleMerchantId: getData('googleMerchantId')\n                });\n                let result = await paymentsClient.isReadyToPay({\n                    apiVersion: 2,\n                    apiVersionMinor: 0,\n                    allowedPaymentMethods: googlePayInstance.createPaymentDataRequest().allowedPaymentMethods\n                });\n                if (result.result) {\n                    canPay = true;\n                } else {\n                    canPay = false;\n                }\n                return canPay;\n            } catch (error) {\n                return error;\n            }\n        },\n        content: <PaymentMethod content={GooglePayContainer}\n                                title={getData('title')}\n                                description={getData('description')}\n                                name={getData('name')}\n                                icon={getData('icon')}\n                                getData={getData}\n                                isExpress={true}/>,\n        edit: <PaymentMethod content={GooglePayContainer} getData={getData}/>,\n        supports: {\n            showSavedCards: getData('features').includes('tokenization'),\n            showSaveOption: true,\n            features: getData('features')\n        }\n    });\n}\n","export * from './use-process-payment';\nexport * from './use-three-d-secure';\nexport * from './use-process-payment-failure';\nexport * from './use-device-data';\nexport * from './use-notice-handler';\nexport * from './use-payment-events-handler';\nexport * from './use-breakpoint-width'","import {useEffect, useState, useRef} from '@wordpress/element';\nimport {getFromCache, storeInCache} from \"../utils\";\nimport {usePaymentMethodDataContext} from \"../context\";\n\nexport const useBreakpointWidth = (\n    {\n        key,\n        el,\n        className = '',\n        breakpoint = 0\n    }) => {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n    key = `${key}:breakpoint`;\n    useEffect(() => {\n        if (el) {\n            let minWidth = getFromCache(key, 0);\n            if (breakpoint < minWidth || !minWidth) {\n                minWidth = breakpoint;\n                storeInCache(key, minWidth);\n            }\n            if (el.clientWidth < minWidth) {\n                el.classList.add(className);\n            } else {\n                el.classList.remove(className);\n            }\n        }\n    }, [el, windowWidth]);\n\n    useEffect(() => {\n        const onWindowResize = (e) => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', onWindowResize);\n        return () => window.removeEventListener('resize', onWindowResize);\n    });\n}\n\nexport const useExpressBreakpointWidth = (\n    {\n        breakpoint,\n        className = 'wc-braintree-blocks-express-sm'\n    }) => {\n    const [element, setElement] = useState(null);\n    const {container} = usePaymentMethodDataContext();\n\n    useEffect(() => {\n        if (container) {\n            setElement(container.parentNode?.parentNode);\n        }\n    }, [container])\n\n    useBreakpointWidth({\n        key: 'express',\n        el: element,\n        breakpoint,\n        className\n    })\n}","import {useState, useEffect} from '@wordpress/element';\nimport {create} from '@braintree/data-collector';\nimport {usePaymentMethodDataContext} from \"../context\";\n\nexport const useDeviceData = (options = {}) => {\n    const {client, notice, onPaymentDataFilter, fraud} = usePaymentMethodDataContext();\n    const enabled = fraud.enabled;\n    const {addNotice} = notice;\n    const [dataCollector, setDataCollector] = useState(null);\n    useEffect(() => {\n        if (enabled && client) {\n            create({\n                client,\n                kount: true, ...options\n            }, (error, instance) => {\n                if (error) {\n                    addNotice(error);\n                } else {\n                    setDataCollector(instance);\n                }\n            });\n        }\n    }, [enabled, client, addNotice]);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {name}) => {\n            data.meta.paymentMethodData[`${name}_device_data`] = dataCollector?.deviceData;\n            return data;\n        }, 10);\n        return () => unsubscribe();\n    }, [dataCollector, onPaymentDataFilter]);\n    return dataCollector;\n}\n\nexport default useDeviceData;","import {useState, useCallback} from '@wordpress/element';\nimport {getErrorMessage} from \"../utils\";\n\nexport const useNoticeHandler = ({isExpress, setExpressPaymentError}) => {\n    const [notice, setNotice] = useState(null);\n    const addNotice = useCallback((error, type = 'error', isDismissible = true) => {\n        if (isExpress && type == 'error') {\n            setExpressPaymentError(getErrorMessage(error));\n        } else {\n            setNotice({\n                message: getErrorMessage(error),\n                type,\n                isDismissible\n            });\n        }\n\n    }, [setNotice, isExpress, setExpressPaymentError]);\n    const removeNotice = useCallback(() => setNotice(null), [setNotice]);\n    return [\n        notice,\n        addNotice,\n        removeNotice\n    ]\n}\n\nexport default useNoticeHandler;","import {useEffect, useRef, useCallback, useMemo} from '@wordpress/element';\n\nexport const usePaymentEventsHandler = (\n    {\n        billing,\n        shippingData,\n        eventRegistration\n    }) => {\n    const currentData = useRef({billing, shippingData});\n    const {onShippingRateSuccess, onShippingRateFail, onShippingRateSelectSuccess} = eventRegistration;\n    const handlers = useRef(new Map([\n        ['shippingHandler', []],\n        ['shippingMethodHandler', []],\n        ['shippingAddressHandler', []]\n    ]));\n    useEffect(() => {\n        currentData.current = {billing, shippingData};\n    });\n\n    const hasShippingOptions = (shippingRates) => shippingRates.map(rate => rate?.shipping_rates.length > 0).filter(Boolean).length > 0;\n\n    const handleShippingChange = useCallback(async () => {\n        const {billing, shippingData} = currentData.current;\n        const handler = handlers.current.get('shippingHandler');\n        if (handler.length > 0 && !shippingData.isSelectingRate && !shippingData.shippingRatesLoading) {\n            const success = hasShippingOptions(shippingData.shippingRates);\n            while (handler.length) {\n                const callback = handler.pop();\n                await Promise.resolve(callback(success, {billing, shippingData}));\n            }\n        }\n    }, []);\n\n    const handleShippingRateFail = useCallback(() => {\n        const {billing, shippingData} = currentData.current;\n        const handler = handlers.current.get('shippingHandler');\n        while (handler.length) {\n            const callback = handler.pop();\n            callback(false, {billing, shippingData});\n        }\n    }, []);\n\n    const addPaymentEventHandler = useCallback(type => (callback, execute = false) => {\n        const handler = handlers.current.get(type);\n        handler.push(callback);\n        if (execute) {\n            handleShippingChange();\n        }\n    }, [\n        handleShippingChange,\n        handlers.current\n    ]);\n\n    const addShippingHandler = useCallback(addPaymentEventHandler('shippingHandler'), [addPaymentEventHandler]);\n    const addShippingMethodHandler = useCallback(addPaymentEventHandler('shippingMethodHandler'), [addPaymentEventHandler]);\n    const addShippingAddressHandler = useCallback(addPaymentEventHandler('shippingAddressHandler'), [addPaymentEventHandler]);\n\n    useEffect(() => {\n        const unsubscribeShippingRateSuccess = onShippingRateSuccess(handleShippingChange);\n        const unsubscribeShippingRateSelectSuccess = onShippingRateSelectSuccess(handleShippingChange);\n        const unsubscribeShippingRateFail = onShippingRateFail(handleShippingRateFail);\n        return () => {\n            unsubscribeShippingRateSuccess();\n            unsubscribeShippingRateSelectSuccess();\n            unsubscribeShippingRateFail();\n        }\n    }, [\n        onShippingRateSuccess,\n        onShippingRateSelectSuccess,\n        onShippingRateFail\n    ]);\n\n    return {\n        addShippingHandler,\n        addShippingMethodHandler,\n        addShippingAddressHandler\n    }\n}","import {useEffect} from '@wordpress/element';\n\nexport const useProcessPaymentFailure = ({event, responseTypes, messageContext = null}) => {\n    useEffect(() => {\n        const unsubscribe = event((data) => {\n            if (data?.processingResponse?.paymentDetails?.braintreeErrorMessage) {\n                const message = data.processingResponse.paymentDetails.braintreeErrorMessage;\n                return {\n                    type: responseTypes.ERROR,\n                    message,\n                    messageContext\n                }\n            }\n            return null;\n        });\n        return () => unsubscribe();\n    }, [event]);\n}\n\nexport default useProcessPaymentFailure;","import {useEffect, useRef} from '@wordpress/element';\nimport {ensureErrorResponse, ensureSuccessResponse} from \"../utils\";\nimport {useThreeDSecure} from \"./use-three-d-secure\";\nimport {useDeviceData} from \"./use-device-data\";\nimport {usePaymentMethodDataContext} from '../context';\n\nexport const useProcessPayment = (\n    {\n        onPaymentSetup,\n        responseTypes,\n        name,\n        shippingData,\n        billing,\n        activePaymentMethod,\n        advancedFraudOptions = {}\n    }) => {\n    const currentData = useRef({shippingData, billing, name, activePaymentMethod});\n    const {paymentMethodNonce, paymentHandler, doPaymentDataFilter} = usePaymentMethodDataContext();\n    useThreeDSecure({name});\n    useDeviceData(advancedFraudOptions);\n\n    useEffect(() => {\n        currentData.current = {shippingData, billing, name, activePaymentMethod, paymentMethodNonce};\n    });\n\n    useEffect(() => {\n        const unsubscribe = onPaymentSetup(async () => {\n            if (currentData.current.activePaymentMethod == currentData.current.name) {\n                try {\n                    const nonce = currentData.current?.paymentMethodNonce || '';\n                    let data = {meta: {paymentMethodData: {[`${name}_nonce_key`]: nonce}}}, result;\n                    if (paymentHandler) {\n                        result = await Promise.resolve(paymentHandler(currentData.current));\n                        if (result?.nonce) {\n                            data.meta.paymentMethodData[`${name}_nonce_key`] = result.nonce;\n                        }\n                    }\n                    result = await doPaymentDataFilter(data, {...currentData.current, ...{result}});\n                    return ensureSuccessResponse(responseTypes, result);\n                } catch (error) {\n                    return ensureErrorResponse(responseTypes, error);\n                }\n            }\n        });\n        return () => unsubscribe();\n    }, [\n        onPaymentSetup,\n        doPaymentDataFilter,\n        paymentHandler\n    ]);\n}\n\nexport default useProcessPayment;","import {useState, useEffect, useCallback} from '@wordpress/element';\nimport {__} from '@wordpress/i18n';\nimport {create} from '@braintree/three-d-secure';\nimport {removeNumberPrecision} from \"../utils\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {getSettings} from '../utils';\n\nexport const useThreeDSecure = ({name, vaulted = false}) => {\n    const settings = getSettings(name);\n    const {client, notice, onPaymentDataFilter, threeDSecureEnabled} = usePaymentMethodDataContext();\n    const {addNotice} = notice;\n    const [instance, setInstance] = useState(null);\n    useEffect(() => {\n        if ((threeDSecureEnabled || vaulted) && client && !instance) {\n            try {\n                create({\n                    version: 2,\n                    client\n                }, (error, instance) => {\n                    if (!error) {\n                        setInstance(instance);\n                    } else {\n                        addNotice(error);\n                    }\n                });\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }, [\n        instance,\n        threeDSecureEnabled,\n        vaulted,\n        client,\n        addNotice\n    ]);\n\n    useEffect(() => {\n        if (instance) {\n            const unsubscribe = onPaymentDataFilter((data, {result, name, shippingData, billing}) => {\n                return new Promise((resolve, reject) => {\n                    const {needsShipping, shippingAddress} = shippingData;\n                    const {billingAddress, cartTotal, currency} = billing;\n                    instance.verifyCard({\n                        amount: removeNumberPrecision(cartTotal.value, currency.minorUnit),\n                        nonce: result.nonce,\n                        bin: result?.details?.bin,\n                        email: billingAddress.email || '',\n                        challengeRequested: settings('challengeRequested'),\n                        collectDeviceData: true,\n                        billingAddress: {\n                            givenName: billingAddress.first_name,\n                            surname: billingAddress.last_name,\n                            phoneNumber: billingAddress.phone,\n                            streetAddress: billingAddress.address_1?.slice(0, 50),\n                            extendedAddress: billingAddress.address_2?.slice(0, 50),\n                            locality: billingAddress.city?.slice(0, 50),\n                            region: billingAddress.state,\n                            postalCode: billingAddress.postcode,\n                            countryCodeAlpha2: billingAddress.country\n                        },\n                        additionalInformation: needsShipping ? {\n                            shippingGivenName: shippingAddress.first_name,\n                            shippingSurname: shippingAddress.last_name,\n                            shippingAddress: {\n                                streetAddress: shippingAddress.address_1?.slice(0, 50),\n                                extendedAddress: shippingAddress.address_2?.slice(0, 50),\n                                locality: shippingAddress.city?.slice(0, 50),\n                                region: shippingAddress.state,\n                                postalCode: shippingAddress.postcode,\n                                countryCodeAlpha2: shippingAddress.country\n                            },\n                            ipAddress: settings('ipAddress')\n                        } : {\n                            ipAddress: settings('ipAddress')\n                        },\n                        onLookupComplete: (data, next) => next()\n                    }, (error, payload) => {\n                        if (error) {\n                            reject(error);\n                        } else if (payload?.threeDSecureInfo?.status === 'challenge_required') {\n                            // 3DS was cancelled so teardown and set to null.\n                            instance.teardown().then(() => setInstance(null));\n                            reject({\n                                message: __('3DS authorization cancelled.', 'woo-payment-gateway')\n                            });\n                        } else {\n                            data.meta.paymentMethodData[`${name}_nonce_key`] = payload.nonce;\n                            resolve(data);\n                        }\n                    });\n                })\n            }, 20);\n            return () => unsubscribe();\n        }\n    }, [instance]);\n\n    return instance;\n}\n\nexport default useThreeDSecure;","export * from './use-load-paypal';\nexport * from './use-paypal-options';","import {useState, useEffect, useRef} from '@wordpress/element';\n\nexport const useLoadPayPal = (\n    {\n        paypalCheckoutInstance,\n        currency,\n        addNotice,\n        clientToken,\n        intent,\n        flow,\n        partnerCode\n    }) => {\n    const [paypal, setPayPal] = useState(null);\n    const currentData = useRef({});\n    useEffect(() => {\n        currentData.current.addNotice = addNotice;\n    }, [\n        addNotice\n    ]);\n    useEffect(() => {\n        if (paypalCheckoutInstance) {\n            if (window.paypal) {\n                setPayPal(window.paypal)\n            } else {\n                clientToken = JSON.parse(window.atob(clientToken));\n                const args = {\n                    'client-id': clientToken?.paypal?.clientId,\n                    commit: true,\n                    intent: flow === 'vault' ? 'tokenize' : intent,\n                    currency,\n                    vault: flow === 'vault' ? true : false,\n                    components: 'buttons,messages',\n                    dataAttributes: {\n                        'partner-attribution-id': partnerCode\n                    }\n                };\n                paypalCheckoutInstance.loadPayPalSDK(args).then(() => {\n                    setPayPal(window.paypal)\n                }).catch(error => {\n                    currentData.current.addNotice(error);\n                });\n            }\n        }\n    }, [paypalCheckoutInstance]);\n    return paypal;\n}\n\nexport default useLoadPayPal;","import {useEffect, useMemo, useCallback, useRef} from '@wordpress/element';\nimport {__} from '@wordpress/i18n';\nimport {isEqual, isEmpty} from 'lodash';\nimport {getSetting} from '@woocommerce/settings';\nimport {\n    extractSelectedShippingOption,\n    removeNumberPrecision,\n    getCartTotalItem,\n    extractFullName,\n    getShippingOptionId,\n    cartContainsSubscription,\n    DEFAULT_BILLING_ADDRESS,\n    DEFAULT_SHIPPING_ADDRESS\n} from \"../../utils\";\nimport {usePaymentEventsHandler} from \"../../hooks\";\nimport {getSelectedShippingOptionId} from \"../../googlepay/helpers\";\nimport {usePaymentMethodDataContext} from \"../../context\";\n\nexport const usePayPalOptions = (\n    {\n        getData,\n        addNotice,\n        paypal,\n        paypalCheckoutInstance,\n        billing,\n        shippingData,\n        eventRegistration,\n        emitResponse,\n        onClick,\n        onClose\n    }) => {\n    const {cartTotal, currency} = billing;\n    const {needsShipping} = shippingData;\n    const {noticeContexts, responseTypes} = emitResponse;\n    const currentData = useRef({billing, shippingData});\n    const paymentData = useRef({});\n    const {addShippingHandler} = usePaymentEventsHandler({billing, shippingData, eventRegistration});\n    const {setPaymentMethodNonce, onPaymentDataFilter, onSubmit} = usePaymentMethodDataContext();\n    const {onCheckoutFail} = eventRegistration;\n\n    useEffect(() => {\n        const unsubscribe = onCheckoutFail(() => {\n            if (paymentData.current.incompleteBilling) {\n                return {\n                    type: responseTypes.ERROR,\n                    message: __('Please complete all required billing fields below then click Place Order.', 'woo-payment-gateway'),\n                    messageContext: noticeContexts.EXPRESS_PAYMENTS\n                };\n            }\n            return null;\n        });\n        return () => unsubscribe();\n    }, [\n        onCheckoutFail,\n        responseTypes,\n        noticeContexts\n    ]);\n\n    const getButtonStyle = useCallback((type) => {\n        const baseStyle = getData('buttonStyle');\n        switch (type) {\n            case paypal.FUNDING.PAYPAL:\n                return baseStyle;\n            case paypal.FUNDING.PAYLATER:\n                return {...baseStyle, ...getData('bnplButtonStyle')};\n            default:\n                return baseStyle;\n\n        }\n    }, [paypal]);\n\n    const getFormattedShippingOptions = (shippingRates) => {\n        let options = [];\n        shippingRates.forEach((shippingPackage, idx) => {\n            let rates = shippingPackage.shipping_rates.map(rate => {\n                let txt = document.createElement('textarea');\n                txt.innerHTML = rate.name;\n                return {\n                    id: getShippingOptionId(idx, rate.rate_id),\n                    label: txt.value,\n                    type: 'SHIPPING',\n                    selected: rate.selected,\n                    amount: {\n                        value: removeNumberPrecision(rate.price, rate.currency_minor_unit),\n                        currency_code: rate.currency_code\n                    }\n                }\n            });\n            options = [...options, ...rates];\n        });\n        return options;\n    };\n\n    useEffect(() => {\n        currentData.current = {billing, shippingData, onClick, onClose, onSubmit, addNotice};\n    }, [\n        billing,\n        shippingData,\n        onClick\n    ]);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {billing, shippingData}) => {\n            data.meta.paymentMethodData[`${getData('name')}_nonce_key`] = paymentData.current.nonce;\n            data.meta.billingAddress = {\n                ...DEFAULT_BILLING_ADDRESS,\n                ...billing.billingAddress,\n                ...paymentData.current.billingAddress\n            };\n            data.meta.shippingAddress = {\n                ...DEFAULT_SHIPPING_ADDRESS,\n                ...shippingData.shippingAddress,\n                ...paymentData.current.shippingAddress\n            }\n\n            return data;\n        }, 5);\n        return () => unsubscribe();\n    }, [onPaymentDataFilter]);\n\n    const onShippingChange = useCallback((actions, selectedShippingOption, shippingDataEqual, resolve) => (success, {billing, shippingData}) => {\n        const {currency, cartTotal, cartTotalItems} = billing;\n        const {shippingRates} = shippingData;\n        if (success) {\n            // create the patch\n            const patch = [{\n                'op': 'replace',\n                'path': '/purchase_units/@reference_id==\\'default\\'/amount',\n                'value': {\n                    'currency_code': currency.code,\n                    'value': removeNumberPrecision(cartTotal.value, 2),\n                    'breakdown': {\n                        'item_total': {\n                            'currency_code': currency.code,\n                            'value': removeNumberPrecision(getCartTotalItem('total_items', cartTotalItems), currency.minorUnit) +\n                                removeNumberPrecision(getCartTotalItem('total_fees', cartTotalItems), currency.minorUnit)\n                        },\n                        'shipping': {\n                            'currency_code': currency.code,\n                            'value': removeNumberPrecision(getCartTotalItem('total_shipping', cartTotalItems), currency.minorUnit)\n                        },\n                        'tax_total': {\n                            'currency_code': currency.code,\n                            'value': removeNumberPrecision(getCartTotalItem('total_tax', cartTotalItems), currency.minorUnit)\n                        },\n                        'shipping_discount': {\n                            'currency_code': currency.code,\n                            'value': removeNumberPrecision(getCartTotalItem('total_discount', cartTotalItems), currency.minorUnit)\n                        }\n                    }\n                }\n            }, {\n                'op': !selectedShippingOption ? 'add' : 'replace',\n                'path': '/purchase_units/@reference_id==\\'default\\'/shipping/options',\n                'value': getFormattedShippingOptions(shippingRates)\n            }];\n            return actions.order.patch(patch).then(() => {\n                resolve();\n                actions.resolve()\n            });\n        } else {\n            resolve();\n            return actions.reject();\n        }\n    }, []);\n\n    const options = useMemo(() => {\n        if (paypal && paypalCheckoutInstance) {\n            const options = [];\n            const sources = [paypal.FUNDING.PAYPAL];\n            if (getData('bnplEnabled')) {\n                sources.push(paypal.FUNDING.PAYLATER);\n            }\n            for (let fundingSource of sources) {\n                const option = {\n                    fundingSource,\n                    style: getButtonStyle(fundingSource),\n                    onError: (error) => currentData.current.addNotice(error),\n                    onClick: () => {\n                        currentData.current.onClick();\n                    },\n                    onApprove: (data, actions) => {\n                        return paypalCheckoutInstance.tokenizePayment(data).then(response => {\n                            const {billingAddress} = currentData.current.billing;\n                            const {needsShipping} = currentData.current.shippingData;\n                            // set shipping address\n                            paymentData.current = {nonce: response.nonce, billingAddress: {}};\n                            if (response?.details?.billingAddress) {\n                                const address = response.details.billingAddress;\n                                paymentData.current.billingAddress = {\n                                    address_1: address.line1,\n                                    address_2: address.line2,\n                                    city: address.city,\n                                    state: address.state,\n                                    postcode: address.postalCode,\n                                    country: address.countryCode\n                                }\n                            }\n                            if (!isEmpty(response?.details?.shippingAddress)) {\n                                const {shippingAddress} = response.details;\n                                const [first_name, last_name] = extractFullName(shippingAddress.recipientName);\n                                paymentData.current.shippingAddress = {\n                                    first_name,\n                                    last_name,\n                                    address_1: shippingAddress.line1 || '',\n                                    address_2: shippingAddress.line2 || '',\n                                    city: shippingAddress.city || '',\n                                    state: shippingAddress.state || '',\n                                    postcode: shippingAddress.postalCode || '',\n                                    country: shippingAddress.countryCode || ''\n                                }\n                                if (isEmpty(paymentData.current.billingAddress)) {\n                                    paymentData.current.billingAddress = paymentData.current.shippingAddress;\n                                }\n                                if (response.details?.phone) {\n                                    paymentData.current.shippingAddress.phone = response.details.phone;\n                                }\n                            }\n                            if (response.details?.phone) {\n                                paymentData.current.billingAddress.phone = response.details.phone;\n                            }\n                            if (response.details?.email) {\n                                paymentData.current.billingAddress.email = response.details.email;\n                            }\n                            if (response.details?.firstName) {\n                                paymentData.current.billingAddress.first_name = response.details.firstName;\n                            }\n                            if (response.details?.lastName) {\n                                paymentData.current.billingAddress.last_name = response.details.lastName;\n                            }\n                            if (!paymentData.current.billingAddress.address_1 && !billingAddress.address_1) {\n                                paymentData.current.incompleteBilling = true;\n                            }\n                            if (cartContainsSubscription() && needsShipping) {\n                                currentData.current.addNotice(__('Please select a shipping option then click Place Order to complete your payment.', 'woo-payment-gateway'), 'info');\n                            } else {\n                                setPaymentMethodNonce(response.nonce);\n                            }\n                        });\n                    },\n                    createOrder: () => {\n                        return paypalCheckoutInstance.createPayment({\n                            flow: cartContainsSubscription() ? 'vault' : 'checkout',\n                            intent: getData('intent'),\n                            currency: currency.code,\n                            displayName: getData('displayName'),\n                            amount: removeNumberPrecision(cartTotal.value, currency.minorUnit),\n                            enableShippingAddress: needsShipping,\n                            shippingAddressEditable: needsShipping\n                        }).then(id => {\n                            return id;\n                        }).catch(error => {\n                            console.log(error);\n                        })\n                    },\n                    onCancel: () => {\n                        currentData.current.onClose();\n                    }\n                }\n                if (cartContainsSubscription()) {\n                    option.createBillingAgreement = option.createOrder;\n                    delete (option.createOrder);\n                }\n                // can't update shipping options when using billing agreements.\n                if (needsShipping && !option.hasOwnProperty('createBillingAgreement')) {\n                    option.onShippingChange = (data, actions) => {\n                        const {shipping_address: address, selected_shipping_option} = data;\n                        const selectedShippingOption = selected_shipping_option?.id;\n                        const shippingData = currentData.current.shippingData;\n                        const {shippingAddress} = shippingData;\n                        const {city, state, postcode, country} = shippingAddress;\n                        const shippingOptionId = getSelectedShippingOptionId(currentData.current.shippingData.shippingRates);\n                        const newAddress = {\n                            city: address.city || '',\n                            state: address.state || '',\n                            postcode: address.postal_code || '',\n                            country: address.country_code || ''\n                        }\n                        const isShippingOptionEqual = selectedShippingOption == null || selectedShippingOption == shippingOptionId;\n                        const isAddressEqual = isEqual({\n                            city, state, postcode, country\n                        }, newAddress);\n                        const shippingDataEqual = isAddressEqual && isShippingOptionEqual;\n                        if (selectedShippingOption) {\n                            shippingData.setSelectedRates(...extractSelectedShippingOption(selectedShippingOption));\n                        }\n                        shippingData.setShippingAddress({...shippingAddress, ...newAddress});\n                        return new Promise(resolve => {\n                            addShippingHandler(onShippingChange(actions, selected_shipping_option?.id, shippingDataEqual, resolve), shippingDataEqual);\n                        });\n                    }\n                }\n                let button = paypal.Buttons(option);\n                if (button.isEligible()) {\n                    options.push(option);\n                }\n            }\n            return options;\n        }\n    }, [\n        paypal,\n        paypalCheckoutInstance,\n        needsShipping,\n        onShippingChange,\n        addShippingHandler,\n        setPaymentMethodNonce\n    ]);\n    return options;\n}\n\nexport default usePayPalOptions;","import {useState, useEffect, useRef, useCallback} from '@wordpress/element';\nimport {registerExpressPaymentMethod} from '@woocommerce/blocks-registry';\nimport {ExperimentalOrderMeta, TotalsWrapper} from '@woocommerce/blocks-checkout';\nimport {registerPlugin} from '@wordpress/plugins';\nimport {create as createPayPalCheckout} from '@braintree/paypal-checkout';\nimport {getClientToken, getSettings, getMerchantAccount, cartContainsSubscription, isCartPage, isCheckoutPage} from \"../utils\";\nimport {Notice, PaymentMethod} from \"../../components\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {useLoadPayPal, usePayPalOptions} from \"./hooks\";\nimport {useExpressBreakpointWidth} from \"../hooks\";\n\nconst getData = getSettings('braintree_paypal');\n\nconst PayPalContainer = ({billing, shippingData, eventRegistration, emitResponse, onClick, onClose}) => {\n    const {currency} = billing;\n    const {notice} = usePaymentMethodDataContext();\n    const {addNotice} = notice;\n    const [paypalCheckoutInstance, setPayPalCheckoutInstance] = useState(null);\n    const [isPayPalButton, setIsPayPalButton] = useState(false);\n    const paypalButton = useRef();\n    useExpressBreakpointWidth({breakpoint: 375});\n    const paypal = useLoadPayPal({\n        paypalCheckoutInstance,\n        currency: currency.code,\n        clientToken: getClientToken(),\n        addNotice,\n        intent: getData('intent'),\n        flow: cartContainsSubscription() ? 'vault' : 'checkout',\n        partnerCode: getData('partnerCode')\n    });\n    const options = usePayPalOptions({\n        getData,\n        addNotice,\n        paypal,\n        paypalCheckoutInstance,\n        billing,\n        shippingData,\n        eventRegistration,\n        emitResponse,\n        onClick,\n        onClose\n    })\n    useEffect(() => {\n        createPayPalCheckout({\n            authorization: getClientToken(),\n            merchantAccountId: getMerchantAccount(currency.code)\n        }).then(instance => {\n            setPayPalCheckoutInstance(instance)\n        }).catch(error => {\n            addNotice(error)\n        });\n    }, []);\n\n    useEffect(() => {\n        if (paypal) {\n            paypal.Buttons.driver(\"react\", {React, ReactDOM});\n            paypalButton.current = paypal.Buttons.driver(\"react\", {React, ReactDOM});\n            setIsPayPalButton(true);\n        }\n    }, [paypal]);\n    const PayPalButton = paypalButton.current;\n    const BUTTON = isPayPalButton && options ? options.map(option => {\n        return <PayPalButton key={option.fundingSource} {...option}/>\n    }) : null;\n    return (\n        <>\n            {notice?.notice && <Notice notice={notice.notice} onRemove={notice.removeNotice}/>}\n            {BUTTON}\n        </>\n    )\n}\n\nif ((isCartPage() && getData('expressCartEnabled')) || (isCheckoutPage() && getData('expressCheckoutEnabled'))) {\n    registerExpressPaymentMethod({\n        name: getData('name'),\n        canMakePayment: () => {\n            return true;\n        },\n        content: <PaymentMethod content={PayPalContainer}\n                                title={getData('title')}\n                                description={getData('description')}\n                                name={getData('name')}\n                                icon={getData('icon')}\n                                getData={getData}\n                                isExpress={true}\n                                advancedFraudOptions={{paypal: true}}/>,\n        edit: <PaymentMethod content={PayPalContainer} getData={getData}/>,\n        supports: {\n            showSavedCards: getData('features').includes('tokenization'),\n            showSaveOption: true,\n            features: getData('features')\n        }\n    });\n}\n\nconst OrderItemMessaging = ({cart, extensions, context}) => {\n    const {cartTotals} = cart;\n    const {currency_code: currency, total_price} = cartTotals;\n    const [paypalCheckout, setPayPalCheckout] = useState();\n    const currencies = getData('payLaterMsgCurrencies');\n    const isAvailable = getData('paylaterMsgEnabled') && currencies.includes(currency) && !cartContainsSubscription();\n    const container = useRef(null);\n    if (!isAvailable) {\n        return null;\n    }\n    useEffect(() => {\n        createPayPalCheckout({\n            authorization: getClientToken(),\n            merchantAccountId: getMerchantAccount(currency)\n        }).then((instance) => setPayPalCheckout(instance)).catch(() => {\n        });\n    }, []);\n    const paypal = useLoadPayPal({\n        paypalCheckoutInstance: paypalCheckout,\n        currency,\n        addNotice: null,\n        clientToken: getClientToken(),\n        intent: getData('intent'),\n        flow: 'checkout',\n        partnerCode: getData('partnerCode')\n    });\n\n    useEffect(() => {\n        if (paypal) {\n            paypal.Messages({\n                amount: total_price / (10 ** cartTotals.currency_minor_unit),\n                currency,\n                placement: 'checkout',\n                style: {\n                    layout: 'text',\n                    logo: {\n                        type: 'primary',\n                        position: 'left'\n                    },\n                    text: {color: getData('paylaterTxtColor')}\n                }\n            }).render(container.current);\n        }\n    }, [paypal, total_price]);\n    return (\n        <TotalsWrapper>\n            <div className='wc-block-components-totals-item'>\n                <div ref={container} className='paypal-msg-container'></div>\n            </div>\n        </TotalsWrapper>\n    )\n}\n\nconst render = () => {\n    return (\n        <ExperimentalOrderMeta>\n            <OrderItemMessaging/>\n        </ExperimentalOrderMeta>\n    )\n}\n\n\nregisterPlugin('wc-braintree', {\n    render,\n    scope: 'woocommerce-checkout'\n});\n","import {getSetting} from '@woocommerce/settings';\nimport {create as createClient} from '@braintree/client';\nimport {getCurrency, formatPrice as wcFormatPrice} from '@woocommerce/price-format';\n\nconst wcBraintreeData = getSetting('wcBraintreeData');\n\nconst errorMessages = getSetting('wcBraintreeMessages');\n\nconst CACHE_PREFIX = 'wcBraintree:';\n\nconst SHIPPING_OPTION_REGEX = /^([\\w]+)\\:(.+)$/;\n\nexport const getSettings = (name) => {\n    name = `${name}_data`;\n    return (key) => {\n        if (key) {\n            return getSetting(name)[key];\n        }\n        return getSetting(name);\n    }\n}\n\nexport const getClientToken = () => wcBraintreeData.clientToken;\n\nexport const getMerchantAccount = (currency) => wcBraintreeData?.merchantAccounts?.[currency] ? wcBraintreeData.merchantAccounts[currency] : null\n\nexport const loadClient = new Promise((resolve, reject) => {\n    createClient({\n        authorization: wcBraintreeData.clientToken\n    }, (err, clientInstance) => {\n        if (err) {\n            reject(err);\n        } else {\n            resolve(clientInstance);\n        }\n    });\n});\n\nexport const canMakePayment = () => {\n    return new Promise((resolve, reject) => {\n        loadClient.then(() => resolve(true)).catch(error => {\n            console.log('Error loading client: ', error);\n            resolve({error});\n        });\n    });\n}\n\nexport const ensureSuccessResponse = (responseTypes, data = {}) => {\n    return {type: responseTypes.SUCCESS, ...data};\n}\n\nexport const ensureErrorResponse = (responseTypes, error) => {\n    return {type: responseTypes.ERROR, message: getErrorMessage(error)}\n};\n\nexport const getErrorMessage = (error) => {\n    let msg = error?.message;\n    if (typeof error == 'string') {\n        msg = error;\n    } else {\n        if (error.code && errorMessages[error.code]) {\n            msg = errorMessages[error.code];\n        }\n    }\n    return msg;\n}\n\nexport const removeNumberPrecision = (value, unit) => {\n    return value / 10 ** unit;\n}\n\nexport class BraintreeError extends Error {\n    constructor(error) {\n        super(error.message);\n        this.error = error;\n    }\n}\n\nconst getCacheKey = (key) => `${CACHE_PREFIX}${key}`;\n\nexport const storeInCache = (key, value) => {\n    const exp = Math.floor(new Date().getTime() / 1000) + (60 * 15);\n    if ('sessionStorage' in window) {\n        sessionStorage.setItem(getCacheKey(key), JSON.stringify({value, exp}));\n    }\n}\n\nexport const getFromCache = (key, defaultValue = null) => {\n    if ('sessionStorage' in window) {\n        try {\n            const item = JSON.parse(sessionStorage.getItem(getCacheKey(key)));\n            if (item) {\n                const {value, exp} = item;\n                if (Math.floor(new Date().getTime() / 1000) > exp) {\n                    deleteFromCache(getCacheKey(key));\n                } else {\n                    return value;\n                }\n            }\n        } catch (err) {\n        }\n    }\n    return defaultValue;\n}\n\nexport const deleteFromCache = (key) => {\n    if ('sessionStorage' in window) {\n        sessionStorage.removeItem(getCacheKey(key));\n    }\n}\n\nexport const formatPrice = (price, currencyCode) => {\n    const {prefix, suffix, decimalSeparator, minorUnit, thousandSeparator} = getCurrency(currencyCode);\n    if (price == '' || price === undefined) {\n        return price;\n    }\n\n    price = typeof price === 'string' ? parseInt(price, 10) : price;\n    price = price / 10 ** minorUnit;\n    price = price.toString().replace('.', decimalSeparator);\n    let fractional = '';\n    const index = price.indexOf(decimalSeparator);\n    if (index < 0) {\n        if (minorUnit > 0) {\n            price += `${decimalSeparator}${new Array(minorUnit + 1).join('0')}`;\n        }\n    } else {\n        const fractional = price.substr(index + 1);\n        if (fractional.length < minorUnit) {\n            price += new Array(minorUnit - fractional.length + 1).join('0');\n        }\n    }\n    // separate out price and decimals so thousands separator can be added.\n    const match = price.match(new RegExp(`(\\\\d+)\\\\${decimalSeparator}(\\\\d+)`));\n    if (match) {\n        ({1: price, 2: fractional} = match);\n    }\n    price = price.replace(new RegExp(`\\\\B(?=(\\\\d{3})+(?!\\\\d))`, 'g'), `${thousandSeparator}`);\n    price = fractional?.length > 0 ? price + decimalSeparator + fractional : price;\n    price = prefix + price + suffix;\n    return price;\n}\n\nexport const getShippingOptionId = (packageId, rateId) => `${packageId}:${rateId}`;\n\nexport const extractSelectedShippingOption = (id) => {\n    const result = id.match(SHIPPING_OPTION_REGEX);\n    if (result) {\n        const {1: packageIdx, 2: rate} = result;\n        return [rate, packageIdx];\n    }\n    return [];\n}\n\nexport const getSelectedShippingOptionId = (selectedRates) => {\n    for (let idx of Object.keys(selectedRates)) {\n        return getShippingOptionId(idx, selectedRates[idx]);\n    }\n}\n\nexport const extractFullName = (name) => {\n    const firstName = name.split(' ').slice(0, -1).join(' ');\n    const lastName = name.split(' ').pop();\n    return [firstName, lastName];\n}\n\nexport const extractAddressLines = (lines) => {\n    let address_1, address_2;\n    if (Array.isArray(lines)) {\n        address_1 = lines?.[0];\n        if (lines.length > 1) {\n            address_2 = lines?.[1];\n        }\n    }\n    return {address_1, address_2};\n}\n\nexport const getCartTotalItem = (key, cartTotalItems) => {\n    for (let item of cartTotalItems) {\n        if (item.key === key) {\n            return item.value;\n        }\n    }\n    return null;\n}\n\nexport const canShowSavedCard = () => {\n    return !cartContainsSubscription();\n}\n\nexport const cartContainsSubscription = () => wcBraintreeData?.hasSubscription == true;\n\nexport const isCartPage = () => wcBraintreeData.page === 'cart';\n\nexport const isCheckoutPage = () => wcBraintreeData.page === 'checkout';\n\nexport const DEFAULT_SHIPPING_ADDRESS = {\n    'first_name': '',\n    'last_name': '',\n    'company': '',\n    'address_1': '',\n    'address_2': '',\n    'city': '',\n    'state': '',\n    'postcode': '',\n    'country': '',\n    'phone': '',\n}\n\nexport const DEFAULT_BILLING_ADDRESS = {\n    ...DEFAULT_SHIPPING_ADDRESS,\n    'email': ''\n}\n","export * from './use-handle-tokenization';","import {useEffect, useCallback, useRef} from '@wordpress/element';\nimport {usePaymentMethodDataContext} from \"../../context\";\n\nexport const useHandleTokenization = ({venmoInstance, onSubmit}) => {\n    const paymentData = useRef(null);\n    const {onPaymentDataFilter, paymentMethodNonce, setPaymentMethodNonce, notice: {addNotice}} = usePaymentMethodDataContext();\n    const handleClick = useCallback(async () => {\n        try {\n            if (paymentMethodNonce) {\n                onSubmit();\n            } else {\n                const result = await venmoInstance.tokenize();\n                paymentData.current = {nonce: result.nonce};\n                setPaymentMethodNonce(result.nonce);\n            }\n        } catch (error) {\n            addNotice(error);\n        }\n    }, [\n        venmoInstance,\n        onSubmit,\n        paymentMethodNonce\n    ]);\n\n    useEffect(() => {\n        const unsubscribe = onPaymentDataFilter((data, {name}) => {\n            data.meta.paymentMethodData[`${name}_nonce_key`] = paymentData.current.nonce;\n            return data;\n        }, 5);\n        return () => unsubscribe();\n    }, [onPaymentDataFilter]);\n\n    return {handleClick}\n}\n\nexport default useHandleTokenization;","import {create as createVenmo} from '@braintree/venmo';\nimport {useState, useEffect} from '@wordpress/element';\nimport {__} from '@wordpress/i18n';\nimport {registerPaymentMethod} from '@woocommerce/blocks-registry';\nimport {Notice, PaymentMethodLabel} from \"../../components\";\nimport {PaymentMethod} from \"../../components\";\nimport {SavedTokenProvider} from \"../../components\";\nimport {getSettings, getClientToken} from \"../utils\";\nimport {usePaymentMethodDataContext} from \"../context\";\nimport {useHandleTokenization} from \"./hooks\";\n\nconst getData = getSettings('braintree_venmo');\n\nconst loadVenmo = new Promise((resolve, reject) => {\n    createVenmo({\n        authorization: getClientToken(),\n        allowNewBrowserTab: false\n    }).then(instance => resolve(instance)).catch(error => reject(error));\n});\n\nconst VenmoComponent = ({onSubmit}) => {\n    const {notice} = usePaymentMethodDataContext();\n    const [venmoInstance, setVenmoInstance] = useState(null);\n    const {handleClick} = useHandleTokenization({\n        venmoInstance,\n        onSubmit\n    });\n\n    useEffect(() => {\n        loadVenmo.then(instance => setVenmoInstance(instance)).catch(error => notice.addNotice(error));\n    }, []);\n    return (\n        <>\n            {notice?.notice && <Notice notice={notice.notice} onRemove={notice.removeNotice}/>}\n            <div className={'wc-braintree-blocks-venmo-button__container'}>\n                <p>{__('Complete your order with', 'woo-payment-gateway')}</p>\n                {venmoInstance && <VenmoButton onClick={handleClick} src={getData('buttonIcon')}/>}\n            </div>\n        </>\n    )\n}\n\nconst VenmoButton = ({onClick, src}) => {\n    return (\n        <button className={'wc-braintree-blocks-venmo__button'} onClick={onClick}>\n            <img src={src}/>\n        </button>\n    )\n}\n\nregisterPaymentMethod({\n    name: getData('name'),\n    label: <PaymentMethodLabel\n        title={getData('title')}\n        paymentMethod={getData('name')}\n        icon={getData('icon')}/>,\n    ariaLabel: __('Venmo', 'woo-payment-gateway'),\n    placeOrderButtonLabel: getData('placeOrderButtonLabel'),\n    canMakePayment: () => new Promise((resolve, reject) => {\n        loadVenmo.then(instance => {\n            resolve(instance.isBrowserSupported());\n        }).catch(error => {\n            resolve(false);\n        });\n    }),\n    content: <PaymentMethod content={VenmoComponent}\n                            title={getData('title')}\n                            description={getData('description')}\n                            name={getData('name')}\n                            icon={getData('icon')}\n                            getData={getData}/>,\n    savedTokenComponent: <SavedTokenProvider getData={getData}\n                                             name={getData('name')}\n                                             vaultedThreeDSecure={getData('vaultedThreeDSecure')}/>,\n    edit: <PaymentMethod content={VenmoComponent} getData={getData}/>,\n    supports: {\n        showSavedCards: getData('features').includes('tokenization'),\n        showSaveOption: false,\n        features: getData('features')\n    }\n});","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","this","setState","className","toString","componentStack","children","Component","Notice","notice","onRemove","classes","classNames","type","key","isDismissible","message","PaymentMethodLabel","title","components","paymentMethod","icon","Label","Icons","PaymentMethodIcons","Array","isArray","text","icons","align","PaymentMethod","content","description","el","useRef","useState","container","setContainer","Content","useEffect","current","ref","PaymentMethodDataProvider","PaymentMethodProviderContainer","name","billing","shippingData","eventRegistration","emitResponse","activePaymentMethod","isExpress","advancedFraudOptions","onPaymentSetup","onCheckoutFail","responseTypes","noticeContexts","useProcessPayment","useProcessPaymentFailure","event","messageContext","EXPRESS_PAYMENTS","i","SavedTokenComponent","vaultedThreeDSecure","token","currentData","doPaymentDataFilter","usePaymentMethodDataContext","useDeviceData","useThreeDSecure","vaulted","fetchTokenNonce","useCallback","token_id","apiFetch","path","method","data","version","result","unsubscribe","success","BraintreeError","meta","paymentMethodData","ensureSuccessResponse","ensureErrorResponse","useCreatePaymentRequest","applePayInstance","getData","useMemo","cartTotal","currency","cartTotalItems","billingAddress","needsShipping","shippingRates","request","total","label","amount","removeNumberPrecision","value","minorUnit","lineItems","formatLineItems","currencyCode","code","countryCode","requiredBillingContactFields","requiredShippingContactFields","fields","email","phone","shippingMethods","formatShippingMethods","createPaymentRequest","useCreateSession","paymentRequest","onClick","onClose","addShippingHandler","usePaymentEventsHandler","setPaymentMethodNonce","onPaymentDataFilter","addNotice","applePayData","getApplePayVersion","range","ApplePaySession","supportsVersion","onSessionCancel","onValidateMerchant","session","performValidation","validationURL","displayName","then","merchantSession","completeMerchantValidation","catch","abort","onPaymentMethodSelected","address","billingContact","country","administrativeArea","postcode","postalCode","city","locality","url","payment_method","response","messages","completePaymentMethodSelection","xhr","onShippingContactSelected","shippingContact","shippingAddress","newAddress","toUpperCase","shipping_address","completeShippingContactSelection","shippingContactUpdate","errors","ApplePayError","contactField","newTotal","newShippingMethods","finally","setShippingAddress","onShippingMethodSelected","shippingMethod","setSelectedRates","selectedRates","shipping_method","identifier","completeShippingMethodSelection","shippingMethodUpdate","extractSelectedShippingOption","onPaymentAuthorized","length","completePayment","status","STATUS_FAILURE","tokenize","payment","first_name","givenName","last_name","familyName","extractAddressLines","addressLines","emailAddress","phoneNumber","nonce","STATUS_SUCCESS","isEmpty","DEFAULT_BILLING_ADDRESS","DEFAULT_SHIPPING_ADDRESS","createSession","onvalidatemerchant","onpaymentmethodselected","onpaymentauthorized","oncancel","onshippingcontactselected","onshippingmethodselected","handleClick","e","preventDefault","begin","alert","getSettings","loadApplePay","Promise","resolve","reject","createApplePay","authorization","getClientToken","instance","ApplePayContainer","setApplePayInstance","ApplePayButton","style","rounded","styles","getButtonStyle","isCartPage","isCheckoutPage","registerExpressPaymentMethod","canMakePayment","window","canMakePayments","edit","supports","features","items","keys","forEach","item","includes","push","options","shippingPackage","idx","rates","shipping_rates","map","rate","txt","document","createElement","innerHTML","getShippingOptionId","rate_id","detail","price","currency_minor_unit","dispatch","callback","priority","action","ACTIONS","ADD_ACTION","id","uniqueId","REMOVE_ACTION","emittFilter","args","handlers","events","sortedEvents","from","values","sort","a","b","console","log","Map","set","delete","PaymentMethodDataContext","createContext","onSubmit","setExpressPaymentError","client","setClient","paymentMethodNonce","useReducer","actionReducer","eventHandlers","useActionEmitter","currentEventHandlers","paymentHandler","useNoticeHandler","removeNotice","setPaymentHandler","handler","loadClient","paymentMethodDataContext","fraud","enabled","threeDSecureEnabled","Provider","useContext","CustomForm","config","getCustomFormConfig","breakpoint","fieldKeys","hostedFieldInstance","setHostedFieldsInstance","setFields","containerElement","setContainerElement","cardBrand","setCardBrand","fieldOrder","assertFieldsValid","reduce","acc","prop","hasOwnProperty","setFieldContainer","field","addClassToFields","classList","add","address_1","streetAddress","payload","details","invalidFieldKeys","useBreakpointWidth","clientInstance","create","on","cards","emittedBy","isValid","indexOf","nextField","focus","cloneElement","setFieldOrder","CardIcon","src","getIconSrc","InvalidCustomForm","sprintf","__","classnames","forms","assertValidConfig","assertValidFormId","Error","assertConfigHasProperties","missingParams","TypeError","join","BootstrapForm","CardNumber","CardExpirationDate","CardCVV","registerCustomForm","SimpleForm","DropinForm","setDropinInstance","clientToken","locale","setError","createDropin","dropinInstance","onChange","CreditCardComponent","dropinEnabled","DropinContainer","HostedFieldsContainer","handlePaymentProcessing","requestPaymentMethod","err","registerPaymentMethod","ariaLabel","savedTokenComponent","SavedTokenProvider","showSavedCards","showSaveOption","canShowSavedCard","unit","formatPrice","currency_code","defaultSelectedOptionId","selected","paymentsClient","setPaymentsClient","environment","merchantInfo","merchantName","merchantId","paymentDataCallbacks","transactionState","onPaymentDataChanged","shippingOptionData","shippingOptionId","shipping","braintree_googlepay","requestUpdate","google","payments","api","PaymentsClient","useHandleTokenization","googlePayInstance","payloadData","paymentDataRequestArgs","transactionInfo","totalPriceStatus","totalPrice","totalPriceLabel","displayItems","getDisplayItems","emailRequired","callbackIntents","shippingAddressRequired","shippingAddressParameters","shippingOptionRequired","shippingOptions","getShippingOptions","shippingOptionParameters","getSelectedShippingOptionId","paymentDataRequest","createPaymentDataRequest","allowedPaymentMethods","parameters","assuranceDetailsRequired","billingAddressRequired","billingAddressParameters","format","phoneNumberRequired","loadPaymentData","info","extractFullName","address1","address_2","address2","parseResponse","statusCode","canPay","GooglePayContainer","setGooglePayInstance","useExpressBreakpointWidth","useCreatePaymentsClient","removeButton","lastChild","removeChild","createGooglePay","googlePayVersion","googleMerchantId","button","createButton","querySelector","remove","append","isReadyToPay","apiVersion","apiVersionMinor","innerWidth","windowWidth","setWindowWidth","minWidth","getFromCache","storeInCache","clientWidth","onWindowResize","addEventListener","removeEventListener","element","setElement","parentNode","dataCollector","setDataCollector","kount","deviceData","setNotice","getErrorMessage","onShippingRateSuccess","onShippingRateFail","onShippingRateSelectSuccess","handleShippingChange","get","isSelectingRate","shippingRatesLoading","filter","Boolean","pop","handleShippingRateFail","addPaymentEventHandler","execute","addShippingMethodHandler","addShippingAddressHandler","unsubscribeShippingRateSuccess","unsubscribeShippingRateSelectSuccess","unsubscribeShippingRateFail","processingResponse","paymentDetails","braintreeErrorMessage","ERROR","settings","setInstance","verifyCard","bin","challengeRequested","collectDeviceData","surname","slice","extendedAddress","region","countryCodeAlpha2","additionalInformation","shippingGivenName","shippingSurname","ipAddress","onLookupComplete","next","threeDSecureInfo","teardown","useLoadPayPal","paypalCheckoutInstance","intent","flow","partnerCode","paypal","setPayPal","JSON","parse","atob","clientId","commit","vault","dataAttributes","loadPayPalSDK","usePayPalOptions","paymentData","incompleteBilling","baseStyle","FUNDING","PAYPAL","PAYLATER","getFormattedShippingOptions","onShippingChange","actions","selectedShippingOption","shippingDataEqual","patch","getCartTotalItem","order","sources","fundingSource","option","onError","onApprove","tokenizePayment","line1","line2","recipientName","firstName","lastName","cartContainsSubscription","createOrder","createPayment","enableShippingAddress","shippingAddressEditable","onCancel","createBillingAgreement","selected_shipping_option","postal_code","country_code","isShippingOptionEqual","isEqual","Buttons","isEligible","PayPalContainer","setPayPalCheckoutInstance","isPayPalButton","setIsPayPalButton","paypalButton","createPayPalCheckout","merchantAccountId","getMerchantAccount","driver","React","ReactDOM","PayPalButton","BUTTON","OrderItemMessaging","cart","cartTotals","extensions","context","total_price","paypalCheckout","setPayPalCheckout","currencies","isAvailable","Messages","placement","layout","logo","position","color","render","TotalsWrapper","registerPlugin","ExperimentalOrderMeta","scope","wcBraintreeData","getSetting","errorMessages","SHIPPING_OPTION_REGEX","merchantAccounts","createClient","SUCCESS","msg","getCacheKey","exp","Math","floor","Date","getTime","sessionStorage","setItem","stringify","defaultValue","getItem","deleteFromCache","removeItem","getCurrency","prefix","suffix","decimalSeparator","thousandSeparator","undefined","parseInt","fractional","index","replace","substr","match","RegExp","packageId","rateId","packageIdx","Object","split","lines","hasSubscription","page","venmoInstance","loadVenmo","createVenmo","allowNewBrowserTab","VenmoComponent","setVenmoInstance","VenmoButton","placeOrderButtonLabel","isBrowserSupported","hasOwn","arguments","arg","argType","inner","apply","prototype","call","module","exports","default"],"sourceRoot":""}